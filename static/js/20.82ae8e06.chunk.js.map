{"version":3,"sources":["components/Frame/Uploadcover.js","components/Frame/inidex.js","common/Operation.js","common/Widget/Checkbox.js","common/Widget/DeleteModal.js","common/NewBtn.js","common/FrameCell.js"],"names":["Uploadcover","withTranslation","props","image","React","createRef","state","myCropper","afterImg","Cropper","this","current","viewMode","dragMode","aspectRatio","preview","background","autoCropArea","zoomOnWheel","setState","replace","img","t","confirm","cancel","className","src","ref","alt","onClick","Component","Rahmen","inject","observer","getWH","rahmen","resize","boxRef","offsetWidth","rahmenList","hide","e","target","nodeName","menuDisplayId","sorthide","sortDis","sortEldis","nativeEvent","stopImmediatePropagation","more_show","node","stopPropagation","checkAllfn","checkAll","checkAllrahmenList","pitchOn","renamefn","name","rename","renameNode","ren_defaultValue","ren_handleconfirm","rename_rename","ren_handlecancel","del_handleconfirm","renameDelete","deleteNode","del_visible","del_handlecancel","maskshow","uploading","cb","files","length","file","size","message","error","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","imageUrl","upFramsid","inputCallback","up_handleCancel","up_handleconfirm","cropper","uploadCover","rahmen_init","sortindex","isdes","goRahmendetails","bindtime","is_admin","serial","goUrl","history","push","click","val","item","domEvent","key","delete","renameRef","fileRef","obj","idx","storage","get","order","sortList","set","defaultSort","init","document","window","updata_frames","event","on","addframes","wsinit","res","removeEventListener","rm","clearData","i","rahmen_sort","id","rahmenEl","firstInit","bindframevisibleshow","removerahmenList","invert","cancelAll","map","FrameCell","style","width","w","height","h","morelist","selectNum","Nodata","Loading","NewBtn","icon","created","btnText","num","Operation","dataNum","oncheck","remove","sort","changeIndex","Checkbox","title","defaultValue","handlecancel","handleconfirm","DeleteModal","text","observable","descending","type","inner","innerWidth","items","moveTop","moveLast","toPlace","toPlaceClick","Item","format","padding","marginRight","overlay","trigger","handleChange","value","handleOK","trim","inputRef","focus","maxLength","autoFocus","spellCheck","onChange","custom","PureComponent","framePlay","noDetail","menu","el","fontSize","accept","theme","os","isPhone","isAndroid","isTablet","visibility","profile","backgroundImage","getFile","file_s","backgroundSize","placement","overlayClassName","playlist_id","strRep"],"mappings":"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","file":"static/js/20.82ae8e06.chunk.js","sourcesContent":["import React from 'react';\nimport Cropper from 'cropperjs'\nimport { withTranslation } from 'react-i18next';\nimport 'cropperjs/dist/cropper.css'\n\n@withTranslation()\nclass Uploadcover extends React.Component {\n  constructor(props) {\n    super(props);\n    this.image = React.createRef();\n    this.state = {\n      myCropper: null,\n      afterImg: ''\n    }\n  }\n\n  componentDidMount() {\n    let myCropper = new Cropper(this.image.current, {\n      viewMode: 1,\n      dragMode: 'none',\n      aspectRatio: 0.7,\n      preview: '.before',\n      background: false,\n      autoCropArea: 0.6,\n      zoomOnWheel: false,\n    })\n    this.setState({\n      myCropper\n    }, () => {\n      this.state.myCropper.replace(this.props.img)\n    })\n  }\n  render() {\n    const { t, img, confirm, cancel } = this.props;\n    return (\n      <div className='cover-Mask'>\n        <div className='cover-inner'>\n          <div className='preview_picture'>\n            <div className='preview_left'>\n              <div className=\"show-img\">\n                <img src={this.props.img} ref={this.image} alt=\"\" />\n              </div>\n              <div className='preview_btn'>\n                <span className='confirm' onClick={() => { confirm(this.state.myCropper) }}>{t('Determine')}</span>\n                <span className='cancel' onClick={cancel}>{t('Cancel')}</span>\n              </div>\n            </div>\n            <div className='preview_right'>\n              <p>{t('imagePreview')}</p>\n              <div className=\"before\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Uploadcover;","import React from 'react';\nimport { message } from 'antd';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from 'react-i18next';\nimport { storage } from '../../util/index';\nimport './style.scss';\nimport Loading from '../../common/Widget/Loading';\nimport Nodata from '../../common/Widget/Nodata';\nimport { get, observable } from 'mobx';\nimport Checkbox from '../../common/Widget/Checkbox';\nimport DeleteModal from '../../common/Widget/DeleteModal';\nimport Uploadcover from './Uploadcover';\nimport event from '../../util/event';\nimport NewBtn from '../../common/NewBtn';\nimport Operation from '../../common/Operation';\nimport FrameCell from '../../common/FrameCell';\n\n//ls变量名称\nconst RAHMENSORT = 'RahmenSort';\nconst RAHMENSORT_ISDES = 'RahmenSort_isdes';\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\n@withTranslation() @inject('rahmen', 'login') @observer\nclass Rahmen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renameRef = React.createRef();\n    this.boxRef = React.createRef();\n    this.fileRef = React.createRef();\n  }\n  @observable sortList = [\n    { id: 1, text: 'bindingSort', descending: true },\n    { id: 2, text: 'nameSort', descending: true }\n  ];\n  @observable defaultSort = {};\n  @observable init = false;\n  @observable sortindex = 0;\n  @observable isdes = false;\n  @observable checkAll = false;\n  @observable deleteNode = null;\n  @observable menuDisplayId = null;\n  @observable rename = false;\n  @observable renameNode = null;\n  @observable ren_defaultValue = \"\";\n  @observable del_visible = false;\n  @observable imageUrl = null;\n  @observable upFramsid = null;\n  @observable sortDis = false;\n  @observable morelist = [\n    { icon: \"picture\", name: this.props.t(\"Replacecover\"), type: 'input' },\n    { icon: \"edit\", name: this.props.t(\"rename\") },\n    { icon: \"delete\", name: this.props.t(\"delete\") },\n  ];\n\n  componentDidMount() {\n    let obj = {};\n    const idx = storage.get(RAHMENSORT);\n    const order = storage.get(RAHMENSORT_ISDES);\n    if (!idx && idx !== 0) {\n      storage.set(RAHMENSORT, 0)\n      obj = this.sortList[0];\n    } else {\n      obj = this.sortList[idx];\n      this.sortindex = idx;\n    }\n    this.defaultSort = obj;\n    this.isdes = order || false;\n    this.props.rahmen.init(true);\n    this.props.rahmen.rahmen_init(null, storage.get(RAHMENSORT), this.isdes, this.boxRef.current.offsetWidth);\n\n    document.addEventListener('click', this.hide);\n    document.addEventListener('click', this.sorthide);\n\n    window.addEventListener('resize', this.getWH);\n\n    this.updata_frames = event.on('updata_frames', () => {\n      this.props.rahmen.rahmen_init(null, storage.get(RAHMENSORT), this.isdes, this.boxRef.current.offsetWidth);\n    })\n\n    this.addframes = event.on('add_frames', () => {\n      this.props.rahmen.rahmen_init(null, storage.get(RAHMENSORT), this.isdes, this.boxRef.current.offsetWidth);\n    })\n\n    this.wsinit = event.on('wsinit', (res) => {\n      if (res === 1) {\n        this.props.rahmen.rahmen_init(null, storage.get(RAHMENSORT), this.isdes, this.boxRef.current.offsetWidth);\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.hide);\n    document.removeEventListener('click', this.sorthide);\n    window.removeEventListener('resize', this.getWH)\n    event.rm(this.wsinit);\n    event.rm(this.addframes);\n    event.rm(this.updata_frames);\n    this.props.rahmen.init(false);\n    this.props.rahmen.clearData();\n  }\n\n  getWH = () => {\n    this.props.rahmen.resize(this.boxRef.current.offsetWidth, this.props.rahmen.rahmenList)\n  }\n\n  //更多...隐藏\n  hide = e => {\n    if (e.target && e.target.nodeName === 'svg') {\n      return;\n    }\n    this.menuDisplayId = null;\n  }\n  // 排序modal隐藏\n  sorthide = e => {\n    this.sortDis = false;\n  }\n\n  //显示排序\n  sortEldis = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.sortDis = !this.sortDis;\n  }\n\n  //更多显示\n  more_show = (e, node) => {\n    e.stopPropagation();\n    if (this.menuDisplayId) {\n      this.menuDisplayId = null;\n    } else {\n      this.menuDisplayId = node;\n    }\n  }\n\n  //全选\n  checkAllfn = () => {\n    this.checkAll = !this.checkAll;\n    this.props.rahmen.checkAllrahmenList(this.checkAll)\n  }\n\n  //选择排序\n  changeIndex(i) {\n    storage.set(RAHMENSORT, i)\n    if (this.sortindex === i) {\n      this.isdes = !this.isdes;\n      storage.set(RAHMENSORT_ISDES, this.isdes);\n    } else {\n      this.sortindex = i;\n      storage.set(RAHMENSORT_ISDES, this.isdes);\n    }\n    this.defaultSort = this.sortList[i];\n    this.props.rahmen.rahmen_sort(i, this.isdes);\n  }\n\n  pitchOn = (e, node) => {\n    this.props.rahmen.pitchOn(e, node, () => { this.checkAll = true; }, () => { this.checkAll = false; })\n  }\n\n  //重命名显示\n  renamefn = (node, name) => {\n    this.rename = true;\n    this.renameNode = node;\n    this.ren_defaultValue = name;\n  }\n  //重命名确定\n  ren_handleconfirm = (name) => {\n    this.props.rahmen.rename_rename(this.renameNode, name);\n    this.rename = false;\n    this.renameNode = null;\n  }\n  //重命名取消\n  ren_handlecancel = () => {\n    this.rename = false\n    this.renameNode = null;\n  }\n\n  //删除相框显示\n  delete(id) {\n    this.del_visible = true;\n    if (id) this.deleteNode = [id];\n  }\n  //删除相框确定\n  del_handleconfirm = () => {\n    this.props.rahmen.renameDelete(this.deleteNode);\n    this.del_visible = false;\n    this.checkAll = false;\n    this.deleteNode = null;\n  }\n  //删除取消\n  del_handlecancel = () => {\n    this.del_visible = false;\n    this.deleteNode = null;\n  }\n\n  //照片封面上传\n  maskshow = (e) => {\n    e.stopPropagation();\n  }\n\n  //上传\n  uploading = (e, node, cb) => {\n    if (e.target.files.length > 0) {\n      let file = e.target.files[0];\n      if (file.size / 1024 / 1024 > 10) {\n        message.error(this.props.t('picturemaximum'));\n        return;\n      }\n      getBase64(file, (imageUrl) => {\n        this.imageUrl = imageUrl;\n        this.file = file;\n        this.upFramsid = node;\n        this.inputCallback = cb;\n      })\n    }\n  }\n\n  up_handleCancel = () => {\n    this.imageUrl = null;\n    this.upFramsid = null;\n    this.inputCallback();\n    // this.fileRef.current.value = null;\n    this.inputCallback = null;\n  }\n\n  up_handleconfirm = (cropper) => {\n    this.props.rahmen.uploadCover(cropper, this.file, this.upFramsid, () => {\n      this.props.rahmen.rahmen_init(null, this.sortindex, this.isdes, this.boxRef.current.offsetWidth);\n    }, this.inputCallback);\n    this.imageUrl = null;\n  }\n\n  //跳转详情页\n  goRahmendetails = ({ node, name, bindtime, is_admin, serial }) => {\n    this.props.rahmen.goUrl({\n      name, bindtime, is_admin, serial\n    })\n    this.props.history.push(`/frame/detail/${node}`);\n  }\n\n  click = (val, item) => {\n    val.domEvent.stopPropagation();\n    if (val.key === '0') {\n      //...\n    } else if (val.key === '1') {\n      this.renamefn(item.node, item.name)\n    } else if (val.key === '2') {\n      this.delete(item.node)\n    }\n  }\n\n  render() {\n    const { t } = this.props;\n    const {\n      sortList,\n      defaultSort,\n      isdes,\n      rename,\n      ren_defaultValue,\n      del_visible,\n      imageUrl,\n      sortDis } = this;\n    const { firstInit, rahmenList, bindframevisibleshow, removerahmenList, invert,cancelAll } = this.props.rahmen;\n    let rahmenEl;\n    if (firstInit) {\n      if (rahmenList.length > 0) {\n        rahmenEl = rahmenList.map((item) => {\n          return (\n            <FrameCell\n              key={item.node}\n              style={{ width: item.w, height: item.h }}\n              item={item}\n              name={get(item, 'name')}\n              goRahmendetails={this.goRahmendetails}\n              morelist={this.morelist}\n              uploading={this.uploading}\n              click={this.click}\n              pitchOn={this.pitchOn}\n              selectNum={removerahmenList.length}\n            />\n          )\n        })\n      } else {\n        rahmenEl = <Nodata />\n      }\n    } else {\n      rahmenEl = <Loading />\n    }\n\n    return (\n      <div className='rahmen-content'>\n        <NewBtn\n          icon={\"icon-xiangkuang\"}\n          created={bindframevisibleshow}\n          btnText={t(\"BindingFrame\")}\n          num={rahmenList.length}\n          name={t(\"photoframe\")}\n        />\n        <Operation\n          selectNum={removerahmenList.length}\n          dataNum={rahmenList.length}\n          oncheck={this.checkAllfn}\n          invert={invert}\n          remove={(e) => { this.delete(e) }}\n          sort={true}\n          sortList={sortList}\n          defaultSort={defaultSort}\n          isdes={isdes}\n          sortDis={sortDis}\n          sortEldis={this.sortEldis}\n          changeIndex={(i) => {\n            this.changeIndex(i);\n          }}\n          cancelAll={cancelAll}\n        />\n        <div ref={this.boxRef} className='rahmen-main'>\n          {rahmenEl}\n        </div>\n\n        {rename ? <Checkbox\n          title={t('rename')}\n          defaultValue={ren_defaultValue}\n          handlecancel={this.ren_handlecancel}\n          handleconfirm={this.ren_handleconfirm} /> : null}\n\n        {del_visible ? <DeleteModal\n          title={t('Deleteconfirm')}\n          text={t('frame')}\n          handlecancel={this.del_handlecancel}\n          handleconfirm={this.del_handleconfirm} /> : null}\n\n        {imageUrl && <Uploadcover\n          img={this.imageUrl}\n          confirm={this.up_handleconfirm}\n          cancel={this.up_handleCancel} />}\n      </div>\n    );\n  }\n};\n\nexport default Rahmen;\n","import React, { Component } from \"react\";\nimport { Icon, Dropdown, Menu, Button } from \"antd\";\nimport \"./index.scss\";\nimport { withTranslation } from \"react-i18next\";\nimport Sorter from \"./Sorter\";\n\n@withTranslation()\nclass Operation extends Component {\n  state = {\n    inner: false,\n  };\n\n  componentDidMount() {\n    this.resize();\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  resize = () => {\n    if (window.innerWidth < 920) {\n      if (!this.state.inner) {\n        this.setState({ inner: true });\n      }\n    } else {\n      if (this.state.inner) {\n        this.setState({ inner: false });\n      }\n    }\n  };\n\n  render() {\n    let items;\n    const {\n      t,\n      style,\n      id,\n      selectNum,\n      dataNum,\n      oncheck,\n      invert,\n      moveTop,\n      moveLast,\n      remove,\n      toPlace,\n      sort,\n      defaultSort,\n      sortList,\n      isdes,\n      changeIndex,\n      sortDis,\n      sortEldis,\n      cancelAll,\n    } = this.props;\n    if (toPlace) {\n      items = (\n        <Menu onClick={this.props.toPlaceClick}>\n          {this.props.toPlace.map((item, i) => {\n            return (\n              <Menu.Item key={i}>\n                <Icon type=\"plus\" />\n                {item.name}\n              </Menu.Item>\n            );\n          })}\n        </Menu>\n      );\n    }\n\n    return (\n      <div className=\"operation\" style={style}>\n        <div className=\"checkAll\">\n          <i\n            className={`iconfont treeNodeUnselectable ${\n              dataNum === selectNum && dataNum > 0\n                ? \"icon-xuanzhong1\"\n                : \"icon-weixuanzhong\"\n            }`}\n            onClick={oncheck}\n          ></i>\n          <span className=\"checkAll-text\">\n            {selectNum > 0\n              ? t(\"Selected2\").format(selectNum)\n              : t(\"Allelection\")}\n          </span>\n          {selectNum > 0 && invert ? (\n            this.state.inner ? (\n              <Button\n                onClick={invert}\n                className=\"cancel\"\n                style={{ height: \"26px\" }}\n              >\n                <i className=\"iconfont icon-fanxuan\"></i>\n              </Button>\n            ) : (\n              <Button style={{ padding: \"0 8px\" }} onClick={invert} className=\"invert-Selection invert btn\">\n                <i\n                  className=\"iconfont icon-fanxuan\"\n                  style={{ marginRight: \"8px\" }}\n                ></i>\n                {t(\"Reverseselection\")}\n              </Button>\n            )\n          ) : null}\n          {selectNum > 0 && cancelAll ? (\n            this.state.inner ? (\n              <Button\n                icon=\"close\"\n                onClick={() => {\n                  cancelAll && cancelAll();\n                }}\n                style={{ height: \"26px\" }}\n                className=\"cancel\"\n              />\n            ) : (\n              <Button\n                icon=\"close\"\n                onClick={() => {\n                  cancelAll && cancelAll();\n                }}\n                className=\"invert-Selection btn\"\n                style={{ padding: \"0 8px\" }}\n              >\n                {t(\"Cancel\")}\n              </Button>\n            )\n          ) : null}\n        </div>\n        {sort && (\n          <Sorter\n            className=\"btn\"\n            defaultSort={defaultSort || {}}\n            sortList={sortList}\n            isdes={isdes}\n            changeIndex={changeIndex}\n            sortDis={sortDis}\n            sortEldis={sortEldis}\n          />\n        )}\n        {selectNum > 0 && moveTop && (\n          <Button\n            className=\"btn\"\n            onClick={() => {\n              moveTop && moveTop(id);\n            }}\n            style={{ padding: \"0 8px\" }}\n          >\n            {this.state.inner ? (\n              <i className=\"iconfont icon-xiangqianbupai\"></i>\n            ) : (\n              <>\n                <i className=\"iconfont icon-xiangqianbupai\" style={{ marginRight: \"8px\" }}></i>\n                {t(\"Movefront\")}\n              </>\n            )}\n          </Button>\n        )}\n        {selectNum > 0 && moveLast && (\n          <Button\n            className=\"btn\"\n            onClick={() => {\n              moveLast && moveLast(id);\n            }}\n            style={{ padding: \"0 8px\" }}\n          >\n            {this.state.inner ? (\n              <i className=\"iconfont icon-xianghoubupai\"></i>\n            ) : (\n              <>\n                <i className=\"iconfont icon-xianghoubupai\" style={{ marginRight: \"8px\" }}></i>\n                {t(\"Movelast\")}\n              </>\n            )}\n          </Button>\n        )}\n        {toPlace && selectNum > 0 && (\n          <Dropdown overlay={items} trigger={[\"click\"]}>\n            <Button\n              className=\"btn\"\n              style={this.state.inner ? { padding: \"0 8px\" } : {}}\n            >\n              <Icon type=\"plus\" />\n              {this.state.inner ? null : (\n                <>\n                  {t(\"addto\")} <Icon type=\"down\" />\n                </>\n              )}\n            </Button>\n          </Dropdown>\n        )}\n        {remove && selectNum > 0 && (\n          <Button\n            className=\"btn\"\n            icon=\"delete\"\n            onClick={() => {\n              remove(id);\n            }}\n            style={{ padding: \"0 8px\" }}\n          >\n            {this.state.inner ? null : t(\"delete\")}\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Operation;\n","import React, { Component } from 'react';\nimport { Icon, message } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport './style.scss'\nimport { trim } from '../../util/index';\n\n@withTranslation()\nclass Checkbox extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      value: this.props.defaultValue,\n      name: ''\n    }\n  }\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  handleOK = () => {\n    let val = trim(this.state.value);\n    if (val !== '') {\n      this.props.handleconfirm(val);\n    }else{\n      message.error(this.props.t('enterName'))\n    }\n  }\n\n  render() {\n    const { t, title, handlecancel,style } = this.props;\n    return (\n      <div className='custom-modal' style={style}>\n        <div className='modal-warp'>\n          <div className='modal-warp-header'>\n            <h3>{title}</h3>\n            <span onClick={handlecancel}>\n              <Icon type=\"close\" />\n            </span>\n          </div>\n          <div className='modal-warp-boby'>\n            <div className='modal-warp-input'>\n              <input ref={this.inputRef} maxLength={50} autoFocus spellCheck={false} type=\"text\" value={this.state.value} onChange={this.handleChange} />\n            </div>\n            <div className='modal-warp-handle'>\n              <span className='cancel-btn' onClick={handlecancel}>{t('Cancel')}</span>\n              <span\n                className='confirm-btn'\n                onClick={this.handleOK}>{t('Determine')}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport './style.scss'\n\n@withTranslation()\nclass DeleteModal extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n  }\n  render() {\n    const { t, title, text, custom, handlecancel, handleconfirm } = this.props;\n    return (\n      <div className='delete-modal'>\n        <div className='modal-warp'>\n          <div className='modal-warp-header'>\n            <h3>{title}</h3>\n            <span onClick={handlecancel}>\n              <Icon type=\"close\" />\n            </span>\n          </div>\n          <div className='modal-warp-boby'>\n            <div className='modal-warp-text'>\n              <p className='subtitle'>{t('deleteTheSelected')}{text}？</p>\n              <p className='warning'>{t('modalWarning')}{text}{t('CarefulOperation')}</p>\n              <p className='warning'>\n                {custom && custom}\n              </p>\n            </div>\n            <div className='modal-warp-handle'>\n              <span className='cancel-btn' onClick={handlecancel}>{t('Cancel')}</span>\n              <span\n                className='confirm-btn'\n                onClick={handleconfirm}>{t('Determine')}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default DeleteModal;","import React, { PureComponent } from 'react';\nimport './index.scss';\n\nexport default class NewBtn extends PureComponent {\n\n  render() {\n    const { created, num, btnText, name, icon } = this.props;\n    return (\n      <div className='new_btn_inner'>\n        <div className='new_btn'>\n          <button onClick={created}>{btnText}</button>\n        </div>\n        <div className='new_btn_right'>\n          <div className='new_Icon'><i className={`iconfont ${icon}`}></i></div>\n          <div className='num-text'>\n            <p className='text'>{name}</p>\n            <p className='num'>{num || 0}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { PureComponent } from \"react\";\nimport { get } from \"mobx\";\nimport { getFile, strRep, os } from \"../util/index\";\nimport { Tooltip, Menu, Dropdown, Icon } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport \"./index.scss\";\nimport { observer } from \"mobx-react\";\n\n@withTranslation()\n@observer\nclass FrameCell extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.fileRef = React.createRef();\n  }\n\n  render() {\n    const {\n      t,\n      item,\n      name,\n      id,\n      style,\n      goRahmendetails,\n      pitchOn,\n      morelist,\n      click,\n      uploading,\n      framePlay,\n      selectNum,\n      noDetail,\n    } = this.props;\n    const menu = morelist && (\n      <Menu\n        onClick={(e) => {\n          click(e, item);\n        }}\n      >\n        {morelist.map((el, i) => {\n          if (el.type) {\n            return (\n              <Menu.Item key={i}>\n                <div className=\"upfile\">\n                  <span className=\"ListCell_menuItem\">\n                    <Icon\n                      style={{ fontSize: \"16px\", marginRight: \"10px\" }}\n                      type={el.icon}\n                    />\n                    {el.name}\n                  </span>\n                  <input\n                    type=\"file\"\n                    ref={this.fileRef}\n                    title=\"\"\n                    accept=\"image/jpg,image/bmp,image/jpeg,image/png\"\n                    onChange={(e) => {\n                      uploading(e, item.node, () => {\n                        this.fileRef.current.value = null;\n                      });\n                    }}\n                  />\n                </div>\n              </Menu.Item>\n            );\n          } else {\n            return (\n              <Menu.Item key={i}>\n                <span className=\"ListCell_menuItem\">\n                  <Icon\n                    style={{ fontSize: \"16px\", marginRight: \"10px\" }}\n                    type={el.icon}\n                    theme=\"filled\"\n                  />\n                  {el.name}\n                </span>\n              </Menu.Item>\n            );\n          }\n        })}\n      </Menu>\n    );\n\n    return (\n      <div className=\"FrameCell\" style={style}>\n        <div\n          className={`rahmen-list ${\n            get(item, \"check\") ? \"rahmen-list-check\" : \"\"\n          }`}\n          onClick={(e) => {\n            if (noDetail) {\n              pitchOn(item);\n            } else {\n              if (selectNum) {\n                pitchOn(e, item.node);\n              } else {\n                goRahmendetails && goRahmendetails(item);\n              }\n            }\n          }}\n        >\n          {pitchOn && (\n            <span\n              style={\n                os().isPhone || os().isAndroid || os().isTablet\n                  ? { visibility: \"inherit\" }\n                  : {}\n              }\n              className=\"icon-check-s treeNodeUnselectable\"\n              onClick={(e) => {\n                if (goRahmendetails) {\n                  pitchOn(e, item.node);\n                }\n              }}\n            >\n              <i\n                className=\"iconfont\"\n                style={get(item, \"check\") ? {} : { visibility: \"hidden\" }}\n              >\n                &#xe62d;\n              </i>\n            </span>\n          )}\n          <div className=\"rahmen-cover\">\n            <div\n              className=\"cover-img\"\n              style={{\n                width: `${item.w * 0.53}px`,\n                height: `${item.w * 0.7}px`,\n              }}\n            >\n              <span\n                className=\"back-img\"\n                style={\n                  item.profile\n                    ? {\n                        backgroundImage: `url(\"${getFile.file_s(\n                          item.profile.id\n                        )}\")`,\n                        backgroundSize: \"100% 100%\",\n                      }\n                    : {}\n                }\n              ></span>\n            </div>\n            {framePlay && (\n              <div className=\"frame-ringht-500\">\n                <Tooltip\n                  placement=\"left\"\n                  overlayClassName=\"tooltip\"\n                  title={t(\"playtoframe\")}\n                >\n                  <Icon\n                    onClick={() => {\n                      framePlay([item.node]);\n                    }}\n                    type=\"play-square\"\n                    theme=\"filled\"\n                  />\n                </Tooltip>\n              </div>\n            )}\n          </div>\n          <div className=\"rahmen-name-series\">\n            <p className=\"name_info\">\n              <Tooltip\n                placement=\"bottom\"\n                overlayClassName=\"tooltip\"\n                title={get(item, \"name\")}\n              >\n                <span className=\"name ellipsis\">{name}</span>\n              </Tooltip>\n              {morelist ? (\n                <span\n                  className=\"admin\"\n                  style={\n                    item.is_admin\n                      ? { visibility: \"initial\" }\n                      : { visibility: \"hidden\" }\n                  }\n                >\n                  {t(\"Admin\")}\n                </span>\n              ) : (\n                item.playlist_id === id && (\n                  <span className=\"admin\">{t(\"default\")}</span>\n                )\n              )}\n            </p>\n            <div className=\"rahmen_bottom\">\n              <p className=\"series\">SN : {strRep(item.serial)} </p>\n              {morelist && (\n                <div className=\"more\">\n                  <Dropdown\n                    overlay={menu}\n                    placement=\"bottomRight\"\n                    trigger={[\"hover\", \"click\"]}\n                  >\n                    <Icon\n                      onClick={(event) => event.stopPropagation()}\n                      type=\"ellipsis\"\n                      style={{ fontSize: \"20px\" }}\n                    />\n                  </Dropdown>\n                </div>\n              )}\n            </div>\n\n            {framePlay && (\n              <div className=\"frame-ringht\">\n                <Tooltip\n                  placement=\"left\"\n                  overlayClassName=\"tooltip\"\n                  title={t(\"playtoframe\")}\n                >\n                  <Icon\n                    onClick={() => {\n                      framePlay([item.node]);\n                    }}\n                    type=\"play-square\"\n                    theme=\"filled\"\n                  />\n                </Tooltip>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FrameCell;\n"],"sourceRoot":""}