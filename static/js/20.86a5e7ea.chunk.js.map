{"version":3,"sources":["components/Rahmen/Uploadcover.js","components/Rahmen/inidex.js","common/Widget/Checkbox.js","common/Widget/DeleteModal.js"],"names":["Uploadcover","withTranslation","props","image","React","createRef","state","myCropper","afterImg","Cropper","this","current","viewMode","dragMode","aspectRatio","preview","background","autoCropArea","zoomOnWheel","setState","replace","img","t","confirm","cancel","className","src","ref","alt","onClick","Component","Rahmen","inject","observer","getWH","rahmen","resize","boxRef","offsetWidth","rahmenList","hide","e","target","nodeName","menuDisplayId","sorthide","sortDis","more_show","node","stopPropagation","checkAllfn","checkAll","checkAllrahmenList","renamefn","name","rename","renameNode","ren_defaultValue","ren_handleconfirm","rename_rename","ren_handlecancel","del_handleconfirm","renameDelete","deleteNode","del_visible","del_handlecancel","maskshow","uploading","files","length","file","size","message","error","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","imageUrl","upFramsid","up_handleCancel","fileRef","value","up_handleconfirm","cropper","uploadCover","rahmen_init","sortindex","isdes","renameRef","obj","idx","storage","get","order","sortList","set","defaultSort","init","document","window","updata_frames","event","on","addframes","wsinit","res","removeEventListener","rm","nativeEvent","stopImmediatePropagation","i","rahmen_sort","id","bindtime","is_admin","serial","goUrl","history","push","rahmenEl","OS","login","firstInit","bindframevisibleshow","pitchOn","removerahmenList","invert","map","item","key","style","width","w","height","h","goRahmendetails","visibility","profile","getFile","file_s","backgroundSize","placement","overlayClassName","title","strRep","type","display","accept","onChange","theme","delete","Nodata","Loading","num","forEach","true","sortEldis","text","index","changeIndex","Checkbox","defaultValue","handlecancel","handleconfirm","DeleteModal","observable","descending","handleChange","handleOK","val","trim","inputRef","focus","maxLength","autoFocus","spellCheck","custom"],"mappings":"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","file":"static/js/20.86a5e7ea.chunk.js","sourcesContent":["import React from 'react';\nimport Cropper from 'cropperjs'\nimport { withTranslation } from 'react-i18next';\nimport 'cropperjs/dist/cropper.css'\n\n@withTranslation()\nclass Uploadcover extends React.Component {\n  constructor(props) {\n    super(props);\n    this.image = React.createRef();\n    this.state = {\n      myCropper: null,\n      afterImg: ''\n    }\n  }\n\n  componentDidMount() {\n    let myCropper = new Cropper(this.image.current, {\n      viewMode: 1,\n      dragMode: 'none',\n      aspectRatio: 0.7,\n      preview: '.before',\n      background: false,\n      autoCropArea: 0.6,\n      zoomOnWheel: false,\n    })\n    this.setState({\n      myCropper\n    }, () => {\n      this.state.myCropper.replace(this.props.img)\n    })\n  }\n  render() {\n    const { t, confirm, cancel } = this.props;\n    return (\n      <div className='cover-Mask'>\n        <div className='cover-inner'>\n          <div className='preview_picture'>\n            <div className='preview_left'>\n              <div className=\"show-img\">\n                <img src={this.props.img} ref={this.image} alt=\"\" />\n              </div>\n              <div className='preview_btn'>\n                <span className='confirm' onClick={() => { confirm(this.state.myCropper) }}>{t('Determine')}</span>\n                <span className='cancel' onClick={cancel}>{t('Cancel')}</span>\n              </div>\n            </div>\n            <div className='preview_right'>\n              <p>{t('imagePreview')}</p>\n              <div className=\"before\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Uploadcover;","import React from 'react';\nimport { message, Icon, Tooltip } from 'antd';\n\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from 'react-i18next';\nimport { strRep, storage, getFile } from '../../util/util';\nimport './style.scss';\nimport Loading from '../../common/Widget/Loading';\nimport Nodata from '../../common/Widget/Nodata';\nimport { get, observable } from 'mobx';\nimport Checkbox from '../../common/Widget/Checkbox';\nimport DeleteModal from '../../common/Widget/DeleteModal';\nimport Uploadcover from './Uploadcover';\nimport event from '../../util/event';\n\n//ls变量名称\nconst RAHMENSORT = 'RahmenSort';\nconst RAHMENSORT_ISDES = 'RahmenSort_isdes';\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\n@withTranslation() @inject('rahmen', 'login') @observer\nclass Rahmen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renameRef = React.createRef();\n    this.boxRef = React.createRef();\n    this.fileRef = React.createRef();\n  }\n  @observable sortList = [\n    { id: 1, text: 'bindingSort', descending: true },\n    { id: 2, text: 'nameSort', descending: true }\n  ];\n  @observable defaultSort = {};\n  @observable init = false;\n  @observable sortindex = 0;\n  @observable isdes = false;\n  @observable checkAll = false;\n  @observable deleteNode = null;\n  @observable menuDisplayId = null;\n  @observable rename = false;\n  @observable renameNode = null;\n  @observable ren_defaultValue = \"\";\n  @observable del_visible = false;\n  @observable imageUrl = null;\n  @observable upFramsid = null;\n  @observable sortDis = false;\n\n\n  componentDidMount() {\n    let obj = {};\n    const idx = storage.get(RAHMENSORT);\n    const order = storage.get(RAHMENSORT_ISDES);\n    if (!idx && idx !== 0) {\n      storage.set(RAHMENSORT, 0)\n      obj = this.sortList[0];\n    } else {\n      obj = this.sortList[idx];\n      this.sortindex = idx;\n    }\n    this.defaultSort = obj;\n    this.isdes = order || false;\n    this.props.rahmen.init(true);\n    this.props.rahmen.rahmen_init(null, storage.get(RAHMENSORT), this.isdes, this.boxRef.current.offsetWidth);\n\n    document.addEventListener('click', this.hide);\n    document.addEventListener('click', this.sorthide);\n\n    window.addEventListener('resize', this.getWH);\n\n    this.updata_frames = event.on('updata_frames', () => {\n      this.props.rahmen.rahmen_init(null, storage.get(RAHMENSORT), this.isdes, this.boxRef.current.offsetWidth);\n    })\n\n    this.addframes = event.on('add_frames', () => {\n      this.props.rahmen.rahmen_init(null, storage.get(RAHMENSORT), this.isdes, this.boxRef.current.offsetWidth);\n    })\n\n    this.wsinit = event.on('wsinit', (res) => {\n      if (res === 1) {\n        this.props.rahmen.rahmen_init(null, storage.get(RAHMENSORT), this.isdes, this.boxRef.current.offsetWidth);\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.hide);\n    document.removeEventListener('click', this.sorthide);\n    window.removeEventListener('resize', this.getWH)\n    event.rm(this.wsinit);\n    event.rm(this.addframes);\n    event.rm(this.updata_frames);\n    this.props.rahmen.init(false);\n  }\n\n  getWH = () => {\n    this.props.rahmen.resize(this.boxRef.current.offsetWidth, this.props.rahmen.rahmenList)\n  }\n\n  //更多...隐藏\n  hide = e => {\n    if (e.target && e.target.nodeName === 'svg') {\n      return;\n    }\n    this.menuDisplayId = null;\n  }\n  // 排序modal隐藏\n  sorthide = e => {\n    this.sortDis = false;\n  }\n\n  //显示排序\n  sortEldis(e) {\n    e.nativeEvent.stopImmediatePropagation();\n    this.sortDis = !this.sortDis;\n  }\n\n  //更多显示\n  more_show = (e, node) => {\n    e.stopPropagation();\n    if (this.menuDisplayId) {\n      this.menuDisplayId = null;\n    } else {\n      this.menuDisplayId = node;\n    }\n  }\n\n  //全选\n  checkAllfn = () => {\n    this.checkAll = !this.checkAll;\n    this.props.rahmen.checkAllrahmenList(this.checkAll)\n  }\n\n  //选择排序\n  changeIndex(i) {\n    storage.set(RAHMENSORT, i)\n    if (this.sortindex === i) {\n      this.isdes = !this.isdes;\n      storage.set(RAHMENSORT_ISDES, this.isdes);\n    } else {\n      this.sortindex = i;\n      storage.set(RAHMENSORT_ISDES, this.isdes);\n    }\n    this.defaultSort = this.sortList[i];\n    this.props.rahmen.rahmen_sort(i, this.isdes);\n  }\n\n  //重命名显示\n  renamefn = (e, node, name) => {\n    e.stopPropagation();\n    this.rename = true;\n    this.renameNode = node;\n    this.ren_defaultValue = name;\n  }\n  //重命名确定\n  ren_handleconfirm = (name) => {\n    this.props.rahmen.rename_rename(this.renameNode, name);\n    this.rename = false;\n    this.renameNode = null;\n  }\n  //重命名取消\n  ren_handlecancel = () => {\n    this.rename = false\n    this.renameNode = null;\n  }\n\n  //删除相框显示\n  delete(e, id) {\n    e.stopPropagation();\n    this.del_visible = true;\n    if(id) this.deleteNode = [id];\n  }\n  //删除相框确定\n  del_handleconfirm = () => {\n    this.props.rahmen.renameDelete(this.deleteNode);\n    this.del_visible = false;\n    this.checkAll = false;\n    this.deleteNode = null;\n  }\n  //删除取消\n  del_handlecancel = () => {\n    this.del_visible = false;\n    this.deleteNode = null;\n  }\n\n  //照片封面上传\n  maskshow = (e) => {\n    e.stopPropagation();\n  }\n\n  //上传\n  uploading = (e, node) => {\n    if (e.target.files.length > 0) {\n      let file = e.target.files[0];\n      if (file.size / 1024 / 1024 > 10) {\n        message.error(this.props.t('picturemaximum'));\n        return;\n      }\n      getBase64(file, (imageUrl) => {\n        this.imageUrl = imageUrl;\n        this.file = file;\n        this.upFramsid = node;\n      })\n    }\n  }\n\n  up_handleCancel = () => {\n    this.imageUrl = null;\n    this.upFramsid = null;\n    this.fileRef.current.value = null;\n  }\n\n  up_handleconfirm = (cropper) => {\n    this.props.rahmen.uploadCover(cropper, this.file, this.upFramsid, () => {\n      this.props.rahmen.rahmen_init(null, this.sortindex, this.isdes, this.boxRef.current.offsetWidth);\n    }, () => {\n      this.fileRef.current.value = null;\n    });\n    this.imageUrl = null;\n  }\n\n  //跳转详情页\n  goRahmendetails(node, name, bindtime, is_admin, serial) {\n    this.props.rahmen.goUrl({\n      name, bindtime, is_admin, serial\n    })\n    this.props.history.push(`/rahmen/rahmendetails/${node}`);\n  }\n\n  render() {\n    const { t } = this.props;\n    const { OS } = this.props.login;\n    const {\n      sortList,\n      defaultSort,\n      isdes,\n      menuDisplayId,\n      rename,\n      ren_defaultValue,\n      del_visible,\n      imageUrl,\n      sortDis } = this;\n    const { firstInit, rahmenList, bindframevisibleshow, pitchOn, removerahmenList, invert } = this.props.rahmen;\n    let rahmenEl;\n    if (firstInit) {\n      if (rahmenList.length > 0) {\n        rahmenEl = rahmenList.map((item) => {\n          return (\n            <div className='list' key={item.node} style={{ width: item.w, height: item.h }}>\n              <div\n                className={`rahmen-list ${get(item, 'check') ? 'rahmen-list-check' : null}`}\n                onClick={(e) => { this.goRahmendetails(item.node, item.name, item.bindtime, item.is_admin, item.serial) }}>\n                <span\n                  style={OS === 'tab' ? { visibility: 'inherit' } : {}}\n                  className='icon-check-s treeNodeUnselectable'\n                  onClick={(e) => { pitchOn(e, item.node, () => { this.checkAll = true; }, () => { this.checkAll = false; }) }}>\n                  <i className='iconfont' style={get(item, 'check') ? {} : { visibility: \"hidden\" }}>&#xe62d;</i>\n                </span>\n                <div className='rahmen-cover'>\n                  <div className='cover-img'>\n                    <span\n                      className='back-img'\n                      style={item.profile ? { background: `url(\"${getFile.file_s(item.profile.id)}\") no-repeat`, backgroundSize: '100% 100%' } : {}}></span>\n                  </div>\n                </div>\n                <div className='rahmen-name-series'>\n                  <p className='name_info ellipsis'>\n                    <Tooltip placement=\"bottom\" overlayClassName='tooltip' title={get(item, 'name')}>\n                      <span className='name ellipsis'>{item.name}</span>\n                    </Tooltip>\n                    <span className='admin' style={item.is_admin ? { visibility: 'initial' } : { visibility: 'hidden' }}>{t('Admin')}</span>\n                  </p>\n                  <p className='series'>SN : {strRep(item.serial)} </p>\n                </div>\n                <div className='rahmen-list-more treeNodeUnselectable' onClick={(e) => { this.more_show(e, item.node) }}>\n                  <div className='more-box'>\n                    <span><Icon type=\"ellipsis\" /></span>\n                    <div className='more-menu' style={menuDisplayId === item.node ? {} : { display: 'none' }}>\n                      <ul>\n                        <li className='upfile' onClick={this.maskshow}>\n                          <span><Icon type=\"picture\" />{t('Replacecover')}</span>\n                          <input type=\"file\"\n                            ref={this.fileRef}\n                            title=\"\"\n                            accept=\"image/jpg,image/bmp,image/jpeg,image/png\"\n                            onChange={(e) => { this.uploading(e, item.node) }} />\n                        </li>\n                        <li onClick={(e) => { this.renamefn(e, item.node, item.name) }}>\n                          <span><Icon type=\"edit\" theme=\"filled\" />{t('rename')}</span>\n                        </li>\n                        <li onClick={(e) => { this.delete(e, item.node) }}>\n                          <span><Icon type=\"delete\" theme=\"filled\" />{t('delete')}</span>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        })\n      } else {\n        rahmenEl = <Nodata />\n      }\n    } else {\n      rahmenEl = <Loading />\n    }\n    let num = 0;\n    removerahmenList.forEach(item => {\n      if (!item.true) {\n        num += 1;\n      }\n    });\n\n    return (\n      <div className='rahmen-content'>\n        <div className='new-rahmen'>\n          <div className='new-rahmen-btn'>\n            <button onClick={bindframevisibleshow}>{t('BindingFrame')}</button>\n          </div>\n          <div className='rahmen-num'>\n            <div className='rahmen-num-icon'><i className='iconfont'>&#xe607;</i></div>\n            <div className='num-text'>\n              <p className='text'>{t('photoframe')}</p>\n              <p className='num'>{rahmenList.length}</p>\n            </div>\n          </div>\n        </div>\n        <div className='rahmen-operation'>\n          <div className='checkAll'>\n            <i\n              className={`iconfont check-rahmen treeNodeUnselectable ${rahmenList.length === removerahmenList.length && rahmenList.length > 0 ? 'icon-xuanzhong1' : 'icon-weixuanzhong'}`}\n              onClick={this.checkAllfn}></i>\n            <span className='checkAll-text'>{num > 0 ? `${t('Selected')} ${num} ${t('frame')}` : t('Allelection')}</span>\n            {removerahmenList.length > 0 && <span onClick={invert} className='invert-Selection'>{t('Reverseselection')}</span>}\n          </div>\n          <div className='rahmen-sort treeNodeUnselectable'>\n            <span className='sort' onClick={(e) => { this.sortEldis(e) }}>{t(defaultSort.text)}{isdes ? <Icon type=\"arrow-up\" /> : <Icon type=\"arrow-down\" />}</span>\n            <div className='sort-list' style={sortDis ? { display: 'block' } : { display: 'none' }}>\n              <ul>\n                {\n                  sortList.map((item, index) => {\n                    return (\n                      <li key={item.id} onClick={() => { this.changeIndex(index) }}>\n                        <span>\n                          <Icon type=\"check\" className={item.id === defaultSort.id ? 'check-icon' : null} />\n                          {t(item.text)}</span>\n                      </li>\n                    )\n                  })\n                }\n              </ul>\n            </div>\n          </div>\n          <div className='rahmen-delete' style={removerahmenList.length > 0 ? null : { visibility: 'hidden' }}>\n            <span onClick={(e)=>{this.delete(e,)}}><Icon type=\"delete\" />{t('delete')}</span>\n          </div>\n        </div>\n        <div ref={this.boxRef} className='rahmen-main'>\n          {rahmenEl}\n        </div>\n\n        {rename ? <Checkbox\n          title={t('rename')}\n          defaultValue={ren_defaultValue}\n          handlecancel={this.ren_handlecancel}\n          handleconfirm={this.ren_handleconfirm} /> : null}\n\n        {del_visible ? <DeleteModal\n          title={t('Deleteconfirm')}\n          text={t('frame')}\n          handlecancel={this.del_handlecancel}\n          handleconfirm={this.del_handleconfirm} /> : null}\n\n        {imageUrl && <Uploadcover\n          img={this.imageUrl}\n          confirm={this.up_handleconfirm}\n          cancel={this.up_handleCancel} />}\n      </div>\n    );\n  }\n};\n\nexport default Rahmen;\n","import React, { Component } from 'react';\nimport { Icon, message } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport './style.scss'\nimport { trim } from '../../util/util';\n\n@withTranslation()\nclass Checkbox extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      value: this.props.defaultValue,\n      name: ''\n    }\n  }\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  handleOK = () => {\n    let val = trim(this.state.value);\n    if (val !== '') {\n      this.props.handleconfirm(val);\n    }else{\n      message.error(this.props.t('enterName'))\n    }\n  }\n\n  render() {\n    const { t, title, handlecancel } = this.props;\n    return (\n      <div className='custom-modal'>\n        <div className='modal-warp'>\n          <div className='modal-warp-header'>\n            <h3>{title}</h3>\n            <span onClick={handlecancel}>\n              <Icon type=\"close\" />\n            </span>\n          </div>\n          <div className='modal-warp-boby'>\n            <div className='modal-warp-input'>\n              <input ref={this.inputRef} maxLength={50} autoFocus spellCheck={false} type=\"text\" value={this.state.value} onChange={this.handleChange} />\n            </div>\n            <div className='modal-warp-handle'>\n              <span className='cancel-btn' onClick={handlecancel}>{t('Cancel')}</span>\n              <span\n                className='confirm-btn'\n                onClick={this.handleOK}>{t('Determine')}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport './style.scss'\n\n@withTranslation()\nclass DeleteModal extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n  }\n  render() {\n    const { t, title, text, custom, handlecancel, handleconfirm } = this.props;\n    return (\n      <div className='delete-modal'>\n        <div className='modal-warp'>\n          <div className='modal-warp-header'>\n            <h3>{title}</h3>\n            <span onClick={handlecancel}>\n              <Icon type=\"close\" />\n            </span>\n          </div>\n          <div className='modal-warp-boby'>\n            <div className='modal-warp-text'>\n              <p className='subtitle'>{t('deleteTheSelected')}{text}？</p>\n              <p className='warning'>{t('modalWarning')}{text}{t('CarefulOperation')}</p>\n              <p className='warning'>\n                {custom && custom}\n              </p>\n            </div>\n            <div className='modal-warp-handle'>\n              <span className='cancel-btn' onClick={handlecancel}>{t('Cancel')}</span>\n              <span\n                className='confirm-btn'\n                onClick={handleconfirm}>{t('Determine')}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default DeleteModal;"],"sourceRoot":""}