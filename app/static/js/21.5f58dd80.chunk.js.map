{"version":3,"sources":["page/Personal/PersonalCell.js","page/Personal/ChangePwd.js","page/Personal/index.js","common/Widget/Footer.js","components/Headportrait/SelectProfilePic.js","components/Headportrait/index.js"],"names":["PersonalCell","state","this","props","title","btn","clickBtn","middleNode","style","type","align","justify","gutter","xs","className","sm","span","onClick","PureComponent","ChangePwd","React","forwardRef","ref","id","placeholder","htmlFor","Personal","withTranslation","inject","observer","chengeEmailHide","e","target","nodeName","emailVisible","nameVisible","changeName","nativeEvent","stopImmediatePropagation","user_detail","login","name","trim","nameRef","current","value","message","error","i18next","t","get","reg","nickname","test","wsget","then","getUser_detail","changeEmail","data","storage","email","emailRef","checkEmail","setEmail","set","showModule","setState","visible","hideModal","preserve","old_pwd","old_pwdRef","new_pwd","new_pwdRef","user","pwd","oldpwd","newpwd","pwdVisible","upPortrait","a","event","emit","createRef","pwdref","document","addEventListener","removeEventListener","size","src","host","icon","placement","overlayClassName","trigger","display","spellCheck","maxLength","replace","defaultValue","readOnly","border","Headportrait","userId","handleCancel","callback","push","Footer","Component","observable","format","config","version","SelectProfilePic","image","myCropper","afterImg","Cropper","viewMode","dragMode","initialAspectRatio","aspectRatio","preview","background","autoCropArea","zoomOnWheel","img","confirm","cancel","alt","handleChange","files","length","file","reader","FileReader","result","readAsDataURL","getBase64","imageUrl","handleconfirm","cropper","key","loading","content","duration","afterimg","getCroppedCanvas","imageSmoothingQuality","toDataURL","wordArray","CryptoJS","lib","WordArray","create","hash","SHA256","toString","blob","dataURLtoBlob","ajaxPromise","getCookie","res","success","catch","imageRef","accept","onChange"],"mappings":"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","file":"static/js/21.5f58dd80.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Row, Col, Button } from \"antd\";\n\nexport default class PersonalCell extends PureComponent {\n  state = {};\n  render() {\n    const { title, btn, clickBtn, middleNode, style } = this.props;\n    return (\n      <Row\n        type=\"flex\"\n        align=\"middle\"\n        justify=\"space-between\"\n        gutter={[0, { xs: 8 }]}\n        className=\"plate_cell\"\n        style={style}\n      >\n        <Col sm={{ span: 5 }} xs={{ span: 24 }}>\n          <span className=\"title_left\">{title} :</span>\n        </Col>\n        <Col sm={{ span: 11 }} xs={{ span: 12 }}>\n          {middleNode}\n        </Col>\n        <Col sm={{ span: 8 }} xs={{ span: 12 }} className=\"xs_inner\">\n          {clickBtn && <Button onClick={clickBtn}>{btn}</Button>}\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\n\nconst ChangePwd = React.forwardRef(({ id, title, placeholder, style }, ref) => (\n  <Row\n    type=\"flex\"\n    align=\"middle\"\n    justify=\"space-between\"\n    gutter={[0, { xs: 8 }]}\n    className=\"plate_cell\"\n    style={style}\n  >\n    <Col sm={{ span: 8 }} xs={{ span: 24 }}>\n      <label className=\"pwd_label\" htmlFor={id}>\n        {title}:\n      </label>\n    </Col>\n    <Col sm={{ span: 16 }} xs={{ span: 24 }}>\n      <input\n        id={id}\n        className=\"pwd_input\"\n        type=\"password\"\n        ref={ref}\n        placeholder={placeholder}\n      />\n    </Col>\n  </Row>\n));\n\nexport default ChangePwd;\n","import React, { Component } from \"react\";\nimport { message, Icon, Tooltip, Row, Col, Avatar, Button } from \"antd\";\nimport { withTranslation } from \"react-i18next\";\nimport { inject, observer } from \"mobx-react\";\nimport { trim, storage, reg } from \"../../util/util\";\nimport { host, wsget } from \"../../ws\";\nimport Footer from \"../../common/Widget/Footer\";\nimport \"./style.scss\";\nimport { get, observable } from \"mobx\";\nimport Headportrait from \"../../components/Headportrait\";\nimport event from \"../../util/event\";\nimport i18next from \"i18next\";\nimport PersonalCell from \"./PersonalCell\";\nimport ChangePwd from \"./ChangePwd\";\n\n@withTranslation()\n@inject(\"login\")\n@observer\nclass Personal extends Component {\n  constructor(props) {\n    super(props);\n    this.nameRef = React.createRef();\n    this.pwdref = React.createRef();\n    this.emailRef = React.createRef();\n\n    this.old_pwdRef = React.createRef();\n    this.new_pwdRef = React.createRef();\n\n    this.state = {\n      visible: false,\n    };\n  }\n  @observable nameVisible = false;\n  @observable emailVisible = false;\n  @observable pwdVisible = false;\n\n  componentDidMount() {\n    const { user_detail } = this.props.login;\n    // this.pwdref.current.value = '999999999999';\n    this.props.login.getUser_detail(() => {\n      this.nameRef.current.value =\n        get(user_detail, \"nickname\") || get(user_detail, \"name\");\n    });\n\n    document.addEventListener(\"click\", this.chengeEmailHide);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"click\", this.chengeEmailHide);\n  }\n\n  chengeEmailHide = (e) => {\n    if (e.target.nodeName === \"INPUT\") {\n      return;\n    }\n    this.emailVisible = false;\n    this.nameVisible = false;\n  };\n\n  //重命名\n  changeName = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    const { user_detail } = this.props.login;\n    if (this.nameVisible) {\n      const name = trim(this.nameRef.current.value);\n      if (name === \"\") {\n        message.error(i18next.t(\"NicknameEmpty\"));\n        return;\n      }\n      if (name !== get(user_detail, \"nickname\")) {\n        if (!reg.nickname.test(name)) {\n          message.error(i18next.t(\"nicknameValidity\"));\n          return;\n        }\n        console.log(\"iiiiii\");\n        wsget(\"user_set_nickname\", name, 1).then(() => {\n          this.props.login.getUser_detail();\n        });\n      }\n    }\n    this.nameVisible = !this.nameVisible;\n    this.nameRef.current.value =\n      get(user_detail, \"nickname\") || get(user_detail, \"name\");\n  };\n\n  //更换邮箱\n  changeEmail = (e) => {\n    e.nativeEvent.stopImmediatePropagation();\n    const { user_detail } = this.props.login;\n    const data = storage.get(\"Z_H_U_DATA\");\n    if (this.emailVisible) {\n      const email = this.emailRef.current.value;\n      if (!email) {\n        this.emailVisible = false;\n        return;\n      }\n      if (reg.email.test(email)) {\n        if (email !== get(user_detail, \"email\")) {\n          if (!this.props.login.checkEmail(email)) {\n            console.log(email, get(user_detail, \"email\"));\n            this.props.login.setEmail(email, () => {\n              data.email = email;\n              storage.set(\"Z_H_U_DATA\", data);\n            });\n          } else {\n            message.error(i18next.t(\"boundmail\"));\n          }\n        }\n      } else {\n        message.error(i18next.t(\"emailValidity\"));\n      }\n    }\n    this.emailVisible = !this.emailVisible;\n    this.emailRef.current.value = data.email || \"\";\n  };\n\n  //更换头像start\n  showModule = () => {\n    this.setState({ visible: true });\n  };\n  hideModal = () => {\n    this.setState({ visible: false });\n  };\n\n  //修改密码\n  preserve = () => {\n    const old_pwd = trim(this.old_pwdRef.current.value);\n    const new_pwd = trim(this.new_pwdRef.current.value);\n    let user = storage.get(\"user\");\n    if (!old_pwd) {\n      message.error(i18next.t(\"enterOldpwd\"));\n      return;\n    }\n    if (!new_pwd) {\n      message.error(i18next.t(\"enterset\"));\n      return;\n    }\n    if (!reg.pwd.test(new_pwd)) {\n      message.error(i18next.t(\"pwdFormat\"));\n      return;\n    }\n    if (old_pwd !== user.pwd) {\n      message.error(i18next.t(\"oldpwdinc\"));\n      return;\n    }\n    if (old_pwd === new_pwd) {\n      message.error(i18next.t(\"oldnewsame\"));\n      return;\n    }\n    wsget(\"user_repassword\", { oldpwd: old_pwd, newpwd: new_pwd }, 1).then(\n      () => {\n        user.pwd = new_pwd;\n        storage.set(\"user\", user);\n      }\n    );\n    this.pwdVisible = false;\n  };\n\n  //上传头像\n  upPortrait = (a, id) => {\n    this.props.login.getUser_detail();\n    event.emit(\"setNickname\", {\n      type: \"portrait\",\n      data: id,\n    });\n  };\n\n  render() {\n    const { t } = this.props;\n    const { nameVisible, emailVisible, pwdVisible } = this;\n    const { visible } = this.state;\n    const { user_detail } = this.props.login;\n    const ref = /(.{1}).+(.{2}@.+)/g;\n\n    return (\n      <div className=\"personal_main\">\n        <div className=\"personal_content\">\n          <div className=\"p-content\">\n            <div className=\"content-header\">\n              <h2>{t(\"accountmanagement\")}</h2>\n              <div className=\"plate-1\">\n                <div className=\"subhead\">\n                  <h4>{t(\"Personalinformation\")}</h4>\n                </div>\n\n                <PersonalCell\n                  title={t(\"HeadPortrait\")}\n                  btn={t(\"ChangetheAvatar\")}\n                  clickBtn={this.showModule}\n                  middleNode={\n                    get(user_detail, \"profile\") ? (\n                      <Avatar\n                        size={50}\n                        src={`${host()}/uf/s/${\n                          get(user_detail, \"profile\").id\n                        }/${get(user_detail, \"id\")}`}\n                      />\n                    ) : (\n                      <Avatar size={50} icon=\"user\" />\n                    )\n                  }\n                />\n\n                <PersonalCell\n                  title={t(\"Nickname\")}\n                  btn={nameVisible ? t(\"Determine\") : t(\"ChangeNickname\")}\n                  clickBtn={this.changeName}\n                  middleNode={\n                    <>\n                      <Tooltip\n                        placement=\"topLeft\"\n                        overlayClassName=\"tooltip\"\n                        trigger=\"focus\"\n                        title={t(\"pwdreg\")}\n                      >\n                        <input\n                          className=\"middle_input\"\n                          style={{ display: nameVisible ? \"block\" : \"none\" }}\n                          spellCheck={false}\n                          type=\"text\"\n                          maxLength={50}\n                          ref={this.nameRef}\n                          placeholder={t(\"SetNickname\")}\n                        />\n                      </Tooltip>\n                      <p\n                        className=\"staticname ellipsis\"\n                        style={{ display: nameVisible ? \"none\" : \"block\" }}\n                      >\n                        {user_detail.nickname\n                          ? user_detail.nickname\n                          : user_detail.name}\n                      </p>\n                    </>\n                  }\n                />\n              </div>\n\n              <div className=\"plate-2\">\n                <div className=\"subhead\">\n                  <h4>{t(\"accountinformation\")}</h4>\n                </div>\n\n                <PersonalCell\n                  title={t(\"UserName\")}\n                  middleNode={\n                    <p className=\"staticname ellipsis\">\n                      {storage.get(\"Z_H_U_DATA\").name}\n                    </p>\n                  }\n                />\n\n                <PersonalCell\n                  title={t(\"mailbox\")}\n                  btn={emailVisible ? t(\"Determine\") : t(\"Changingmailbox\")}\n                  clickBtn={this.changeEmail}\n                  middleNode={\n                    <>\n                      <input\n                        className=\"middle_input\"\n                        style={{ display: emailVisible ? \"block\" : \"none\" }}\n                        spellCheck={false}\n                        type=\"email\"\n                        ref={this.emailRef}\n                        placeholder={t(\"enterEmail\")}\n                      />\n                      <p\n                        className=\"staticname ellipsis\"\n                        style={{ display: emailVisible ? \"none\" : \"block\" }}\n                      >\n                        {get(user_detail, \"email\")\n                          ? get(user_detail, \"email\").replace(ref, \"$1****$2\")\n                          : t(\"NotMailbox\")}\n                      </p>\n                    </>\n                  }\n                />\n\n                <PersonalCell\n                  title={t(\"Password\")}\n                  btn={t(\"Changepassword\")}\n                  clickBtn={() => {\n                    this.pwdVisible = true;\n                  }}\n                  middleNode={\n                    <input\n                      className=\"middle_input pwd\"\n                      type=\"password\"\n                      defaultValue={\"************\"}\n                      readOnly={true}\n                    />\n                  }\n                  style={{ border: 0 }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {visible && (\n          <Headportrait\n            userId={user_detail.id}\n            handleCancel={this.hideModal}\n            callback={this.upPortrait}\n          />\n        )}\n\n        {pwdVisible && (\n          <div className=\"changepwd-inner\">\n            <div className=\"changepwd-content\">\n              <span\n                className=\"close_icon\"\n                onClick={() => {\n                  this.pwdVisible = false;\n                }}\n              >\n                <Icon type=\"close\" />\n              </span>\n              <div className=\"changepwd-head\">\n                <h4>{t(\"ChangePwd\")}</h4>\n              </div>\n              <div className=\"changepwd-bd\">\n                <ChangePwd title={t(\"Oldpwd\")} ref={this.old_pwdRef} placeholder={t(\"enterOldpwd\")} />\n\n                <ChangePwd title={t(\"NewPwd\")} ref={this.new_pwdRef} placeholder={t(\"enterNewpwd\")} />\n              </div>\n              <Row className=\"changepwd-ft\">\n                <Col sm={{ span: 16, push: 4 }} xs={{ span: 24, push: 0 }}>\n                  <Button\n                    className=\"changepwd-btn\"\n                    type=\"primary\"\n                    onClick={this.preserve}\n                  >\n                    {t(\"Preservation\")}\n                  </Button>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        )}\n\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default Personal;\n","import React from 'react';\nimport i18next from 'i18next';\nimport './style.scss';\nimport config from '../../config'\n\nfunction Footer() {\n  return (\n    <div id=\"Footer\">\n      <p className='foot-copyright'>{i18next.t('copyright').format(config.name, config.version)}</p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Cropper from 'cropperjs'\nimport { withTranslation } from 'react-i18next';\nimport 'cropperjs/dist/cropper.css'\n\n@withTranslation()\nclass SelectProfilePic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.image = React.createRef();\n    this.state = {\n      myCropper: null,\n      afterImg: ''\n    }\n  }\n\n  componentDidMount() {\n    let myCropper = new Cropper(this.image.current, {\n      viewMode: 1,\n      dragMode: 'none',\n      initialAspectRatio: 1,\n      aspectRatio: 1,\n      preview: '.before',\n      background: false,\n      autoCropArea: 0.6,\n      zoomOnWheel: false,\n    })\n    this.setState({\n      myCropper\n    }, () => {\n      this.state.myCropper.replace(this.props.img)\n    })\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    const { img } = props;\n    if (this.props.img !== img) {\n      this.state.myCropper.replace(img)\n    }\n  }\n  render() {\n    const { t, confirm, cancel } = this.props\n    return (\n      <div className='preview_picture'>\n        <div className='preview_left'>\n          <div className=\"show-img\">\n            <img src={this.props.img} ref={this.image} alt=\"\" />\n          </div>\n          <div className='preview_btn'>\n            <span className='confirm' onClick={() => { confirm(this.state.myCropper) }}>{t('Determine')}</span>\n            <span className='cancel' onClick={cancel}>{t('Cancel')}</span>\n          </div>\n        </div>\n        <div className='preview_right'>\n          <p>{t('imagePreview')}</p>\n          <div className=\"before\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SelectProfilePic;","import React from 'react';\nimport CryptoJS from 'crypto-js';\nimport { Icon, message } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport i18next from 'i18next';\nimport { wsget, host } from '../../ws';\nimport { ajaxPromise, dataURLtoBlob, getCookie } from '../../util/util';\nimport './style.scss';\nimport SelectProfilePic from './SelectProfilePic';\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\n@withTranslation()\nclass Headportrait extends React.Component {\n  constructor(props) {\n    super(props);\n    this.imageRef = React.createRef();\n    this.state = {\n      imageUrl: null\n    }\n  }\n\n  handleChange = (e) => {\n    if (e.target.files.length > 0) {\n      let file = e.target.files[0];\n      if (file.size / 1024 / 1024 > 3) {\n        message.error(i18next.t('Picsize'))\n        return;\n      }\n      getBase64(file, (imageUrl) => {\n        this.setState({ imageUrl, file })\n      })\n    }\n  }\n\n  handleCancel = () => {\n    this.props.handleCancel()\n  }\n\n  handleconfirm = (cropper) => {\n    this.props.handleCancel();\n    const key = 'portrait';\n    message.loading({ content: 'uploading...', key, duration: 0 });\n    const { file } = this.state\n    let afterimg = cropper.getCroppedCanvas({\n      imageSmoothingQuality: 'high'\n    }).toDataURL('image/jpeg');\n    let wordArray = CryptoJS.lib.WordArray.create(afterimg);\n    const hash = CryptoJS.SHA256(wordArray).toString();\n    let blob = dataURLtoBlob(afterimg);\n    ajaxPromise(blob, `${host()}/up/p/${getCookie('cookie')}/${hash}/${file.name}`)\n      .then((result) => {\n        wsget('user_profile_id_save', result.id).then((res) => {\n          message.success({ content: 'succeed!', key, duration: 2 });\n          this.props.callback(null, result.id);\n        }).catch(() => {\n          message.error({ content: 'come to nothing', key, duration: 3 })\n        })\n      })\n  }\n\n  render() {\n    const { imageUrl } = this.state;\n    const { t, handleCancel } = this.props;\n\n    return (\n      <div className='Headportrait-wrap'>\n        <div className='Modify_the_picture'>\n          <span className='close-icon' onClick={handleCancel}>\n            <Icon type=\"close\" />\n          </span>\n          <div className='Modify_head'>\n            {t('Headimage')}\n          </div>\n          <div className='Modify_content'>\n            <p>{t('uploadavatar')}</p>\n            <div className=\"Modify_openimg\">\n              <input type=\"button\" className=\"pass-portrait-filebtn\" name=\"openImgBtn\" id=\"openImgBtn\" value={t('Choosepicture')} />\n              <input\n                type=\"file\"\n                className=\"pass-portrait-file\"\n                accept=\"image/bmp,image/jpeg,image/png\"\n                name=\"file\" id=\"fileImg\"\n                onChange={(e) => { this.handleChange(e) }} />\n              <span className=\"pass-portrait-msg\">{t('SupportPic')}</span>\n            </div>\n\n            {imageUrl && <SelectProfilePic\n              img={this.state.imageUrl}\n              confirm={this.handleconfirm}\n              cancel={this.handleCancel} />}\n\n          </div>\n        </div >\n      </div>\n    );\n  }\n}\nexport default Headportrait;"],"sourceRoot":""}