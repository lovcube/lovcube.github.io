{"version":3,"sources":["components/Albumdetails/Thumbnail.js","components/Albumdetails/index.js"],"names":["Thumbnail","inject","observer","props","errorImg","e","target","src","error","imgRef","React","createRef","this","columnIndex","item","data","rowIndex","albumdetail","columnCount","url","getFile","file_s","id","current","style","background","next","checkclick","b_img_show","OS","login","ps","visible","get","title","cpt","overlayClassName","className","ref","onClick","visibility","ext","test","PureComponent","Albumdetails","withTranslation","initialData","getWH","flag","wi","hi","w","contentRef","offsetWidth","h","offsetHeight","Width","Math","floor","childW","childH","getH","rowCount","length","myresize","resize","info_show","infoObj","icon","txt","filenum","dayjs","created","format","t","updated","info_visible","uploading","reset","uploadFiles","upFile","goblack","history","push","daughterRef","match","params","photoalbum","urlData","name","Number","wsget","albumArr","pos","findIndex","update","getData","window","addEventListener","clearData","removeEventListener","init","removeFileids","oncheckAll","remove_img","closeDialog","imgfile","onPiece","nextPage","addCpt","invert","fileNum","forEach","true","Goblack","go","Upinput","onupload","type","height","width","itemData","columnWidth","rowHeight","Nodata","Loading","blur","Information","handlecancel","Component","observable","num"],"mappings":"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","file":"static/js/20.30908839.chunk.js","sourcesContent":["import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { get } from 'mobx';\nimport { getFile } from '../../util/util';\nimport error from '../../images/imgerror.png'\nimport '../../common/Thumbnail/style.scss'\nimport { Tooltip } from 'antd';\n\n@inject('albumdetail', 'login') @observer\nclass Thumbnail extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.imgRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { columnIndex, data, rowIndex } = this.props;\n    const item = data[rowIndex * this.props.albumdetail.columnCount + columnIndex];\n    if (item) {\n      let url = getFile.file_s(item.id);\n      if (this.imgRef.current) this.imgRef.current.style.background = `#d3d3d3 url(${url}) center center no-repeat`;\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(next) {\n    const { columnIndex, data, rowIndex } = next;\n    const item = data[rowIndex * this.props.albumdetail.columnCount + columnIndex];\n    if (item) {\n      let url = getFile.file_s(item.id);\n      if (this.imgRef.current) this.imgRef.current.style.background = `#d3d3d3 url(${url}) center center no-repeat`;\n    }\n  }\n\n  errorImg = (e) => {\n    const el = e.target;\n    el.src = error;\n  }\n  render() {\n    const { columnIndex, data, rowIndex, style } = this.props;\n    const {\n      columnCount,\n      checkclick,\n      b_img_show\n    } = this.props.albumdetail;\n    const item = data[rowIndex * columnCount + columnIndex]\n    const { OS } = this.props.login;\n    const ps = OS === 'tab' ? { visible: false } : {};\n    try {\n      if (get(item, 'true')) {\n        return <div style={style}></div>\n      } else {\n        return (\n          <Tooltip title={item.cpt} overlayClassName='tooltip' {...ps}>\n            <div\n              className={`thumbnail ${get(item, 'check') ? 'selected' : ''}`}\n              style={style}\n              ref={this.imgRef}\n              onClick={() => { b_img_show(rowIndex * columnCount + columnIndex, item.id) }}>\n                <span \n                style={OS === 'tab' ? { visibility: 'inherit' } : {}}\n                className='icon-check-s treeNodeUnselectable'\n                onClick={(e) => { checkclick(e, rowIndex * columnCount + columnIndex) }}>\n                  <i className='iconfont' style={get(item, 'check') ? {} : { visibility: \"hidden\" }}>&#xe62d;</i>\n                </span>\n              <span className='sign'>{rowIndex * columnCount + columnIndex + 1}</span>\n              {item.ext === 'gif' && <i className='iconfont GIF-IMG'>&#xe670;</i>}\n              {item.cpt && <i className='iconfont icon'>&#xe604;</i>}\n              {/(avi|mov|rmvb|rm|flv|mp4|3gb)$/.test(item.ext) && <i className='iconfont v_icon'>&#xe6ae;</i>}\n            </div>\n          </Tooltip>\n        );\n      }\n    } catch (error) {\n      return <div style={style}></div>\n    }\n  }\n}\n\nexport default Thumbnail;","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { observable } from \"mobx\";\nimport dayjs from 'dayjs';\nimport { FixedSizeGrid as Grid } from 'react-window';\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { withTranslation } from 'react-i18next';\nimport './style.scss'\nimport { Icon } from 'antd';\nimport Thumbnail from './Thumbnail';\nimport Upinput from '../../common/Upinput';\nimport Loading from '../../common/Widget/Loading';\nimport Nodata from '../../common/Widget/Nodata';\nimport Information from '../../common/Information'\nimport BigimgCpt from '../../common/BigimgCpt.js';\nimport { wsget } from '../../ws';\nimport Goblack from '../../common/Goblack';\n\n\n@withTranslation() @inject('photoalbum', 'uploadFiles', 'login', 'albumdetail') @observer\nclass Albumdetails extends Component {\n  constructor(props) {\n    super(props);\n    this.contentRef = React.createRef();\n    this.daughterRef = React.createRef();\n  }\n  @observable num = 100; //一页加载个数\n  @observable init = false;\n  @observable albumdetailList = []; //相册详情列表\n  @observable removeFileids = []; //选中的图片列表\n  @observable checkAll = false; //是否全选\n  @observable visible = false;//大图modul\n  @observable imgfile = {};//大图文件\n  @observable imgidx = null;//切换图片的标识\n  @observable info_visible = false; //详情显隐\n  @observable list = []; //渲染的数据\n  @observable filenum = 0;  //文件数量\n  @observable page = 0; //第一条数据\n  @observable hasMoreItems = true;\n  @observable number = this.num;\n\n  @observable infoObj = {}; //详情数据\n  @observable name = '';\n  @observable id = null;\n  @observable created = null;\n\n\n  initialData = [];\n\n  async componentDidMount() {\n    try {\n      const { id } = this.props.match.params;\n      const { name, created, updated } = this.props.photoalbum.urlData;\n\n      this.id = Number(id);\n      if (!name) {\n        const albumArr = await wsget('album_list', null);\n        const pos = albumArr.findIndex(item => item.id === Number(id));\n        if (pos === -1) {\n          this.props.history.push(\"/album\");\n        }\n        this.name = albumArr[pos].name;\n        this.created = albumArr[pos].created;\n        this.props.albumdetail.update(albumArr[pos].updated || albumArr[pos].created);\n      } else {\n        this.name = name;\n        this.created = created;\n        this.props.albumdetail.update(updated);\n      }\n      this.props.albumdetail.getData(this.id, this.getWH, this.getH);\n      window.addEventListener('resize', this.myresize);\n    } catch (error) {\n      console.log(error)\n      this.props.history.push(\"/album\");\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.albumdetail.clearData();\n    window.removeEventListener('resize', this.myresize);\n  }\n\n  //计算宽高\n  getWH = (flag) => {\n    try {\n      let wi, hi, w = 165, h = 150;\n      this.w = this.contentRef.current.offsetWidth;\n      this.h = this.contentRef.current.offsetHeight;\n      let Width = this.contentRef.current.offsetWidth - 18;\n      let row = Math.floor(Width / w);\n      let space = Width % w;\n      wi = space / row + w;\n      hi = wi / w * h;\n      this.childW = wi;\n      this.childH = hi;\n      this.columnCount = Math.floor(Width / w);\n      console.log(this.h)\n      if (!flag) {\n        this.getH();\n      }\n      console.log('this.columnCount>>>>>>>', this.columnCount)\n      return this.columnCount;\n    } catch (error) {\n      console.log(error);\n      // this.getWH();\n    }\n  }\n\n  getH = () => {\n    const { albumdetail } = this.props.albumdetail;\n    this.rowCount = albumdetail.length / this.columnCount;\n    console.log('this.rowCount', this.rowCount)\n  }\n\n  myresize = () => {\n    this.props.albumdetail.resize(this.getWH)\n  }\n\n  //详情显示\n  info_show = () => {\n    const infoObj = [\n      { id: 1, icon: 'file-image', txt: 'Photo', data: this.props.albumdetail.filenum },\n      { id: 2, icon: 'clock-circle', txt: 'CreationTime', data: dayjs(this.created).format(this.props.t(\"LL\")) },\n      { id: 3, icon: 'clock-circle', txt: 'LastUpdate', data: dayjs(this.props.albumdetail.updated).format(this.props.t(\"LL\")) },\n    ]\n    this.info_visible = true;\n    this.infoObj = infoObj;\n  }\n\n  //上传\n  uploading = (e, reset) => {\n    const { id } = this;\n    this.props.uploadFiles.upFile(e, id, reset)\n  }\n\n\n\n  goblack = () => {\n    this.props.history.push(\"/album\");\n  }\n\n  render() {\n    const { t } = this.props;\n    const {\n      info_visible,\n      name,\n      created } = this;\n    const {\n      init,\n      albumdetail,\n      filenum,\n      removeFileids,\n      oncheckAll,\n      remove_img,\n      closeDialog,\n      visible,\n      imgfile,\n      onPiece,\n      nextPage,\n      addCpt,\n      invert,\n      updated\n    } = this.props.albumdetail;\n\n    let fileNum = 0;\n    removeFileids.forEach(item => {\n      if (!item.true) {\n        fileNum += 1;\n      }\n    });\n\n    return (\n      <div className='Albumdetails'>\n        <div className='Albumdetails-header'>\n          <Goblack go={this.goblack} name={name} />\n          <div className='a-details-information'>\n            <Upinput className='upphoto-btn' onupload={this.uploading} />\n            <div className='Album-file-num'>\n              <div className='a-d-i-icon'><i className='iconfont icon'>&#xe785;</i></div>\n              <div className='Album-num-text'>\n                <p className='text'>{t('Photo')}</p>\n                <p className='num'>{filenum}</p>\n              </div>\n            </div>\n            <div className='Album-creation-time'>\n              <div className='a-d-i-icon'><span className='creation-time-icon'></span></div>\n              <div className='Album-num-text'>\n                <p className='text'>{t('CreationTime')}</p>\n                <p className='num'>{created && dayjs(created).format(t(\"LL\"))}</p>\n              </div>\n            </div>\n            <div className='Album-last-update'>\n              <div className='a-d-i-icon'><span className='last-update-icon'></span></div>\n              <div className='Album-num-text'>\n                <p className='text'>{t('LastUpdate')}</p>\n                <p className='num'>{updated && dayjs(updated).format(t(\"LL\"))}</p>\n              </div>\n            </div>\n            <div className='Album-info-btn' onClick={this.info_show}>\n              <Icon type=\"exclamation\" />\n            </div>\n          </div>\n        </div>\n\n        <div className='Album-operation'>\n          {init && <div className='checkAll'>\n            <i\n              className={`iconfont a-check-frame treeNodeUnselectable ${albumdetail.length === removeFileids.length && albumdetail.length > 0 ? 'icon-xuanzhong1' : 'icon-weixuanzhong'}`}\n              onClick={oncheckAll}></i>\n            <span className='a-checkAll-text'>{fileNum > 0 ? `${t('Selected')} ${fileNum} ${t('file')}` : t('Allelection')}</span>\n            {removeFileids.length > 0 && <span onClick={invert} className='invert-Selection'>{t('Reverseselection')}</span>}\n          </div>}\n          <div\n            className='Album-delete'\n            style={removeFileids.length > 0 ? null : { visibility: 'hidden' }}>\n            <span onClick={remove_img}><Icon type=\"delete\" />{t('delete')}</span>\n          </div>\n        </div>\n\n        <div ref={this.contentRef} className='Albumdetails-main'>\n          {init ? albumdetail.length > 0 ? (\n            <AutoSizer>\n              {({ height, width }) => (\n                <Grid\n                  className=\"Grid\"\n                  itemData={albumdetail}\n                  rowCount={this.rowCount}\n                  columnCount={this.columnCount}\n                  columnWidth={this.childW}\n                  height={height}\n                  rowHeight={this.childH}\n                  width={width}\n                >\n                  {Thumbnail}\n                </Grid>\n              )}\n            </AutoSizer>\n          ) : <Nodata /> : <Loading />}\n        </div>\n\n        {visible && <BigimgCpt\n          closeDialog={closeDialog}\n          imgfile={imgfile}\n          onPiece={onPiece}\n          nextPage={nextPage}\n          blur={addCpt} />}\n\n        {info_visible && <Information\n          data={this.infoObj}\n          handlecancel={() => { this.info_visible = false }} />}\n      </div>\n    )\n  }\n};\n\nexport default Albumdetails;"],"sourceRoot":""}