{"version":3,"sources":["common/Widget/Checkbox.js","common/Goblack.js","components/Rahmenoperate/selectedlist.js","components/Rahmenoperate/frameuser.js","components/Rahmendetails/Control.js","components/Rahmendetails/index.js"],"names":["Checkbox","withTranslation","props","handleChange","event","setState","value","target","handleOK","val","trim","state","handleconfirm","error","t","inputRef","React","createRef","defaultValue","name","this","current","focus","title","handlecancel","className","onClick","type","ref","maxLength","autoFocus","spellCheck","onChange","Component","Goblack","go","Selectedlist","inject","observer","handleOk","rahmen","add_playlist","node","cancel","selectedlist","playitems","Check","allCheck","seletplay","length","map","item","get","key","id","defaultlistId","profile","alt","src","getFile","file_s","profile_1","profile_2","profile_3","dayjs","updated","format","filecount","Nodata","Loading","Frameuser","visible","defaultVal","user_id","newName","frame_user_rename","user_delete","frame_user_delete","val1","val2","frame_user_admin","frame_user_list","i","style","background","host","nickname","overlayClassName","visibility","storage","display","cancelAdmin","setAdmin","show","Control","onCancel","controlBtn","click","width","bodyStyle","textAlign","getContainer","centered","footer","class","Rahmendetails","getWH","resize","boxRef","offsetWidth","playList","hide","menuDisplayId","more_show","e","nativeEvent","stopImmediatePropagation","sel_visible","selectedlistHide","setNode","frameuserHide","user_visible","set_default","playlist_id","stopPropagation","delete","isdefault","message","warning","frame_playlist_delete","framePlay","frame_play","goblack","history","goBack","showControl","control_visible","handleCancel","init","infoObj","match","params","urlData","bindtime","is_admin","serial","Number","wsget","rahmenArr","pos","findIndex","push","cb","rahmen_playlist_init","get_user_list","window","addEventListener","document","removeEventListener","reset0","sumPhoto","telecontrol","strRep","w","height","h","theme","RahmenplaylistEl","observable"],"mappings":"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","file":"static/js/10.d44485b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Icon, message } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport './style.scss'\nimport { trim } from '../../util/util';\n\n@withTranslation()\nclass Checkbox extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      value: this.props.defaultValue,\n      name: ''\n    }\n  }\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  handleOK = () => {\n    let val = trim(this.state.value);\n    if (val !== '') {\n      this.props.handleconfirm(val);\n    }else{\n      message.error(this.props.t('enterName'))\n    }\n  }\n\n  render() {\n    const { t, title, handlecancel } = this.props;\n    return (\n      <div className='custom-modal'>\n        <div className='modal-warp'>\n          <div className='modal-warp-header'>\n            <h3>{title}</h3>\n            <span onClick={handlecancel}>\n              <Icon type=\"close\" />\n            </span>\n          </div>\n          <div className='modal-warp-boby'>\n            <div className='modal-warp-input'>\n              <input ref={this.inputRef} maxLength={50} autoFocus spellCheck={false} type=\"text\" value={this.state.value} onChange={this.handleChange} />\n            </div>\n            <div className='modal-warp-handle'>\n              <span className='cancel-btn' onClick={handlecancel}>{t('Cancel')}</span>\n              <span\n                className='confirm-btn'\n                onClick={this.handleOK}>{t('Determine')}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport './Goblack.scss';\n\n\n/**\n *\n * @param {fn} go \n * @param {string} name  \n */\n\nexport default class Goblack extends Component {\n  render() {\n    return (\n      <div className='go-back'>\n        <p className='go-back-on'>\n          <span className='playlist-name ellipsis' onClick={this.props.go}><Icon type=\"left\" />{this.props.name}</span>\n        </p>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport dayjs from 'dayjs';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from 'react-i18next';\nimport './style.scss';\nimport { getFile } from '../../util/util';\nimport Nodata from '../../common/Widget/Nodata';\nimport Loading from '../../common/Widget/Loading';\nimport { get } from 'mobx';\n\n@withTranslation() @inject('rahmen', 'playlist') @observer\nclass Selectedlist extends Component {\n  componentDidMount() {\n    this.props.rahmen.selectedlist();\n  }\n\n  //确定\n  handleOk = () => {\n    this.props.rahmen.add_playlist(this.props.node)\n    this.props.cancel();\n  }\n\n  render() {\n    const { t } = this.props;\n    const { playitems, Check, allCheck, seletplay } = this.props.rahmen;\n    return (\n      <div className='Setrahmen-moudle'>\n        <div className='Setrahmen-moudle-boby'>\n          <div className='Setrahmen-hd'>\n            <span className='hd-title'>{t('SelecList')}</span>\n            <span className='hd-close-icon' onClick={this.props.cancel}>\n              <Icon type=\"close\" />\n            </span>\n          </div>\n          {\n            playitems && <div className='checkAll'>\n              <i\n                className={`iconfont check-frame treeNodeUnselectable ${seletplay.length === playitems.length && playitems.length > 0 ? 'icon-xuanzhong1' : 'icon-weixuanzhong'}`}\n                onClick={allCheck}></i>\n              <span className='checkAll-text'>{t('Allelection')}</span>\n            </div>\n          }\n          <div className='Setrahmen-bd'>\n            {playitems ? playitems.length > 0 ? playitems.map((item) => {\n              return (\n                <div\n                  className={`list-box ${get(item, 'check') ? 'list-checked' : ''}`}\n                  key={item.id}\n                  onClick={() => { Check(item.id) }}\n                >\n                  {item.defaultlistId ? (\n                    <span className='default'>{t('default')}</span>\n                  ) : (\n                      <span\n                        className='list-box-check'>\n                        <Icon type=\"check\" />\n                      </span>\n                    )}\n                  <div className='top-img'>\n                    <div className=\"img1\">\n                      {item.profile && <img alt={item.profile.key} src={getFile.file_s(item.profile.id)} />}\n                    </div>\n                    <div className=\"img2-4\">\n                      <span className=\"img2\">\n                        {item.profile_1 && <img alt={item.profile_1.key} src={getFile.file_s(item.profile_1.id)} />}\n                      </span>\n                      <span className=\"img3\">\n                        {item.profile_2 && <img alt={item.profile_2.key} src={getFile.file_s(item.profile_2.id)} />}\n                      </span>\n                      <span className=\"img4\">\n                        {item.profile_3 && <img alt={item.profile_3.key} src={getFile.file_s(item.profile_3.id)} />}\n                      </span>\n                    </div>\n                  </div>\n                  <div className='bottom-text'>\n                    <p className='playlist-name'>{item.name}</p>\n                    <p className='update-time'>\n                      <span>{`${t('LastUpdate')}:`}{dayjs(item.updated).format(t('LL'))}</span>\n                    </p>\n                    <span className='playlist-photo-num'>照片:{item.filecount}</span>\n                  </div>\n                </div>\n              )\n            }) : <Nodata /> : <Loading />}\n          </div>\n          <div className='Setrahmen-ft'>\n            <span className=\"cancel-btn\" onClick={this.props.cancel}>{t('Cancel')}</span>\n            <span className=\"confirm-btn\" onClick={this.handleOk}>{t('Determine')}</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Selectedlist;","import React, { Component } from 'react';\nimport { Icon, Tooltip } from 'antd';\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from 'react-i18next';\nimport './style.scss';\nimport Checkbox from '../../common/Widget/Checkbox';\nimport { trim, storage } from '../../util/util';\nimport { get } from 'mobx';\nimport { host } from '../../ws';\n\n@withTranslation() @inject('rahmen', 'playlist') @observer\nclass Frameuser extends Component {\n  state = {\n    visible: false,\n    defaultVal: '',\n    user_id: null\n  }\n\n  show(val1, val2, id) {\n    let name = val1 || val2;\n    this.setState({ visible: true, defaultVal: name, user_id: id });\n  }\n\n  handlecancel = () => {\n    this.setState({ visible: false, defaultVal: '', user_id: null });\n  }\n\n  handleconfirm = (name) => {\n    const newName = trim(name);\n    this.props.rahmen.frame_user_rename(this.props.node, this.state.user_id, newName)\n    this.setState({ visible: false, defaultVal: '', user_id: null });\n  }\n\n  //设为管理员\n  setAdmin(id) {\n    this.props.rahmen.frame_user_admin(this.props.node, id, 'true')\n  }\n  //取消管理员\n  cancelAdmin(id) {\n    this.props.rahmen.frame_user_admin(this.props.node, id, 'false')\n  }\n  //删除用户\n  user_delete = (id) => {\n    this.props.rahmen.frame_user_delete(this.props.node, id)\n  }\n  render() {\n    const { t } = this.props;\n    const { frame_user_list } = this.props.rahmen;\n    return (\n      <div className='frameuser'>\n        <div className='frameuser-inner'>\n          <div className='frameuser-hd'>\n            <span className='hd-title'>{t('UserList')}</span>\n            <span className='hd-close-icon' onClick={this.props.cancel}>\n              <Icon type=\"close\" />\n            </span>\n          </div>\n          <div className='frameuser-bd'>\n            <ul>\n              {\n                frame_user_list.map((item, i) => {\n                  return (\n                    <li key={item.id}>\n                      <span className='user-icon' style={get(item, 'profile') ? { background: `url(${host()}/uf/s/${get(item, 'profile').id}/${item.id})` } : {}}>\n                        {!get(item, 'profile') && <Icon type=\"user\" />}\n                      </span>\n                      <Tooltip title={item.nickname ? item.nickname : item.name} overlayClassName='tooltip'>\n                        <span className='user-name ellipsis'>\n                          {item.nickname ? item.nickname : item.name}\n                        </span>\n                      </Tooltip>\n                      <span\n                        className='user-is-admin'\n                        style={get(item, 'is_admin') ? {} : { visibility: 'hidden' }} >\n                        {t('Admin')}\n                      </span>\n                      <div className='frameuser-operation'>\n                        {\n                          get(item, 'is_admin') ?\n                            <span\n                              className='operation-admin'\n                              style={item.id === storage.get('Z_H_U_DATA').id ? { display: 'none' } : {}}\n                              onClick={() => { this.cancelAdmin(item.id) }}>\n                              {t('cancelAdmin')}\n                            </span> :\n                            <span\n                              className='operation-admin'\n                              style={item.id === storage.get('Z_H_U_DATA').id ? { display: 'none' } : {}}\n                              onClick={() => { this.setAdmin(item.id) }}>\n                              {t('setAdmin')}\n                            </span>\n                        }\n\n                        <span\n                          className='user-rename'\n                          onClick={() => { this.show(item.nickname, item.name, item.id) }}>\n                          {t('modifyNickname')}\n                        </span>\n                        <span\n                          className='user-delete'\n                          style={item.id === storage.get('Z_H_U_DATA').id ? { display: 'none' } : {}}\n                          onClick={() => { this.user_delete(item.id) }} >\n                          {t('delete')}\n                        </span>\n                      </div>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n          <div className='frameuser-ft'>\n            <span className=\"cancel-btn\" onClick={this.props.cancel}>{t('Close')}</span>\n          </div>\n        </div>\n\n        {this.state.visible ? <Checkbox\n          title={t('modifyNickname')}\n          defaultValue={this.state.defaultVal}\n          handlecancel={this.handlecancel}\n          handleconfirm={this.handleconfirm} /> : null}\n      </div>\n    );\n  }\n}\n\nexport default Frameuser;\n","import React, { Component } from 'react';\nimport { Modal } from 'antd';\nimport { withTranslation } from 'react-i18next';\n\n@withTranslation()\nclass Control extends Component {\n  render() {\n    const { t, visible, onCancel, controlBtn, click, node } = this.props;\n    return (\n      <Modal\n        visible={visible}\n        title={t('control')}\n        width={585}\n        bodyStyle={{ textAlign: 'center' }}\n        onCancel={onCancel}\n        getContainer={false}\n        centered={true}\n        footer={null}\n      >\n        <div className='control'>\n          <div className='control-body'>\n            {controlBtn.map(item => {\n              return <span key={item.id} className={item.class} onClick={() => { click(item.class, node) }}></span>\n            })}\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default Control;","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { message, Icon, Tooltip } from 'antd';\nimport dayjs from 'dayjs';\nimport { inject, observer } from 'mobx-react';\nimport { getFile, strRep } from '../../util/util';\nimport Loading from '../../common/Widget/Loading';\nimport Nodata from '../../common/Widget/Nodata';\nimport './style.scss';\nimport { get, observable } from 'mobx';\nimport Selectedlist from '../Rahmenoperate/selectedlist';\nimport Frameuser from '../Rahmenoperate/frameuser';\n// import Information from '../../common/Information'\nimport { wsget } from '../../ws';\nimport Goblack from '../../common/Goblack';\nimport Control from './Control';\n\n@withTranslation() @inject('rahmen') @observer\nclass Rahmendetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.boxRef = React.createRef();\n    this.state = {\n      init: false,\n      sel_visible: false,\n      user_visible: false,\n      menuDisplayId: null,\n      infoObj: {},\n    }\n  }\n  @observable node = null;\n  @observable name = null;\n  @observable serial = null;\n  @observable control_visible = false;\n  @observable controlBtn = [\n    { id: 1, class: 'close' },\n    { id: 2, class: 'return' },\n    { id: 3, class: 'family' },\n    { id: 4, class: 'top' },\n    { id: 5, class: 'bottom' },\n    { id: 6, class: 'left' },\n    { id: 7, class: 'right' },\n    { id: 8, class: 'middle' },\n    { id: 9, class: 'pic' },\n    { id: 10, class: 'mute' },\n    { id: 11, class: 'menu' }\n  ];\n\n\n  async componentDidMount() {\n    try {\n      const { id } = this.props.match.params;\n      const { name, bindtime, is_admin, serial } = this.props.rahmen.urlData;\n      this.node = Number(id);\n      if (!name) {\n        const rahmenArr = await wsget('frame_list', null);\n        const pos = rahmenArr.findIndex(item => item.node === Number(id));\n        if (pos === -1) {\n          this.props.history.push(\"/rahmen\");\n        }\n        this.name = rahmenArr[pos].name;\n        this.bindtime = rahmenArr[pos].bindtime;\n        this.is_admin = rahmenArr[pos].is_admin;\n        this.serial = rahmenArr[pos].serial;\n      } else {\n        this.name = name;\n        this.bindtime = bindtime;\n        this.is_admin = is_admin;\n        this.serial = serial;\n      }\n      let cb = () => this.setState({ init: true })\n      this.props.rahmen.rahmen_playlist_init(this.node, cb, this.boxRef.current.offsetWidth);\n      if (this.is_admin) {\n        this.props.rahmen.get_user_list(this.node);\n      }\n      window.addEventListener('resize', this.getWH);\n      document.addEventListener('click', this.hide);\n    } catch (error) {\n      this.props.history.push(\"/rahmen\");\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.hide);\n    window.removeEventListener('resize', this.getWH)\n    this.props.rahmen.reset0();\n  }\n\n  getWH = () => {\n    this.props.rahmen.resize(this.boxRef.current.offsetWidth, this.props.rahmen.playList, 'play')\n  }\n\n  // 更多/排序modal隐藏\n  hide = () => {\n    this.setState({ menuDisplayId: null })\n  }\n\n  //更多modal显示\n  more_show = (e, node) => {\n    e.nativeEvent.stopImmediatePropagation();\n    this.setState({ menuDisplayId: node })\n  }\n\n  //选择列表显示\n  selectedlist = () => {\n    this.setState({ sel_visible: true });\n  }\n\n  //选择列表隐藏\n  selectedlistHide = () => {\n    this.setState({ sel_visible: false, setNode: null });\n  }\n\n  //用户列表隐藏\n  frameuserHide = () => {\n    this.setState({ user_visible: false });\n  }\n\n  //设置默认列表\n  set_default = (e, node, playlist_id) => {\n    e.stopPropagation();\n    this.props.rahmen.set_default(node, playlist_id)\n  }\n\n  //删除列表\n  delete = (e, item) => {\n    e.stopPropagation();\n    if (item.isdefault) {\n      message.warning(this.props.t('defaultNotDelete'));\n    } else {\n      this.props.rahmen.frame_playlist_delete(this.node, item.id)\n    }\n  }\n\n  //相框播放\n  framePlay = (e, node, id) => {\n    e.stopPropagation();\n    this.props.rahmen.frame_play(node, id)\n  }\n\n  goblack = () => {\n    this.props.history.goBack();\n  }\n\n  showControl = () => {\n    this.control_visible = true;\n  };\n\n  handleCancel = () => {\n    this.control_visible = false;\n  };\n\n\n  render() {\n    const { t } = this.props;\n    const { init, sel_visible, user_visible, menuDisplayId } = this.state;\n    const { node, name, bindtime, is_admin, control_visible } = this;\n    const { playList, sumPhoto, telecontrol } = this.props.rahmen;\n    let RahmenplaylistEl = (playList) => {\n      if (init) {\n        if (playList.length > 0) {\n          return (\n            playList.map((item) => {\n              return (\n                <div key={item.id} className='list' style={{ width: item.w, height: item.h }}>\n                  <div\n                    className='rahmenplaylist'>\n                    <div className='rahmenplaylist-top-img'>\n                      <div className=\"img1\">\n                        {item.profile ? <img alt={item.profile.key} src={getFile.file_s(item.profile.id)} /> : null}\n                      </div>\n                      <div className=\"img2-4\">\n                        <span className=\"img2\">\n                          {item.profile_1 ? <img alt={item.profile_1.key} src={getFile.file_s(item.profile_1.id)} /> : null}\n                        </span>\n                        <span className=\"img3\">\n                          {item.profile_2 ? <img alt={item.profile_2.key} src={getFile.file_s(item.profile_2.id)} /> : null}\n                        </span>\n                        <span className=\"img4\">\n                          {item.profile_3 ? <img alt={item.profile_3.key} src={getFile.file_s(item.profile_3.id)} /> : null}\n                        </span>\n                      </div>\n                    </div>\n                    <div className='rahmenplaylist-information'>\n                      <div className='rahmenplaylist-i-top'>\n                        <p className='rahmenplaylist-name clearfix'>\n                          <span className='rahmenplays-name'>{item.name}</span>\n                          <Tooltip title={t(\"playtoframe\")} overlayClassName='tooltip'>\n                            <span className='frame-play' onClick={(e) => { this.framePlay(e, node, item.id) }}>\n                              <Icon type=\"play-square\" theme=\"filled\" />\n                            </span>\n                          </Tooltip>\n                        </p>\n                        <p className='update-time'>\n                          <span className='LastUpdate'>{t('LastUpdate')}：{dayjs(item.updated).format(t('L'))}</span>\n                          <span className='isdefault' style={item.isdefault ? null : { visibility: 'hidden' }}>{t('default')}</span>\n                        </p>\n                      </div>\n                      <div className='rahmenplaylist-i-bottom'>\n                        <div className='photo-num'>\n                          <p className='num1'>{item.filecount ? item.filecount : 0}</p>\n                          <p className='text1'>{t('photo')}</p>\n                        </div>\n                        <div className='more'>\n                          <span onClick={(e) => { this.more_show(e, item.id) }}><Icon type=\"ellipsis\" /></span>\n                          <div className='rename' style={menuDisplayId === item.id ? { display: 'block' } : {}}>\n                            <ul>\n                              <li onClick={(e) => { this.delete(e, item) }}>\n                                <span><Icon type=\"delete\" theme=\"filled\" />{t('delete')}</span>\n                              </li>\n                              {/* {item.isdefault ? null : <li onClick={(e) => { this.delete(e, item) }}>\n                              <span><Icon type=\"delete\" theme=\"filled\" />{t('delete')}</span>\n                            </li>} */}\n                              <li className='set-default' onClick={(e) => { this.set_default(e, node, item.id) }}>\n                                <span><Icon style={get(item, 'isdefault') ? null : { visibility: 'hidden' }} type=\"check\" />{t('SetDefaultPlaylist')}</span>\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )\n            })\n          )\n        } else {\n          return <Nodata />\n        }\n      } else {\n        return <Loading />\n      }\n    };\n\n    return (\n      <div className='rahmendetails'>\n        <div className='Rahmendetails-header'>\n          <Goblack go={this.goblack} name={name} />\n          <div className='Rahmendetails-information'>\n            <div className='Rahmendetails-addphoto-btn'>\n              <button onClick={this.selectedlist}>{t('SelecList')}</button>\n            </div>\n            <div className='file-num'>\n              <div className='Rahmendetails-h-icon'><i className='iconfont icon'>&#xe933;</i></div>\n              <div className='num-text'>\n                <p className='text'>{t('playlist')}</p>\n                <p className='num'>{init ? playList.length : 0}</p>\n              </div>\n            </div>\n            <div className='file-num'>\n              <div className='Rahmendetails-h-icon'><Icon type=\"file-image\" /></div>\n              <div className='num-text'>\n                <p className='text'>{t('Photo')}</p>\n                <p className='num'>{sumPhoto}</p>\n              </div>\n            </div>\n            <div className='creation-time'>\n              <div className='Rahmendetails-h-icon'><i className='iconfont icon'>&#xe932;</i></div>\n              <div className='num-text'>\n                <p className='text'>SN</p>\n                <p className='num'>{this.serial && strRep(this.serial)}</p>\n              </div>\n            </div>\n            <div className='creation-time'>\n              <div className='Rahmendetails-h-icon'><Icon type=\"clock-circle\" /></div>\n              <div className='num-text'>\n                <p className='text'>{t('bindingTime')}</p>\n                <p className='num'>{dayjs(bindtime).format(t('LL'))}</p>\n              </div>\n            </div>\n            <div className='rahmen-operation'>\n              {is_admin && <div className='rahmen-tool' onClick={this.showControl}>\n                <i className='iconfont icon'>&#xe783;</i>\n              </div>}\n              {is_admin && <div className='rahmen-user' onClick={() => { this.setState({ user_visible: true }); }}>\n                <Icon type=\"team\" />\n              </div>}\n            </div>\n          </div>\n        </div>\n\n        <div ref={this.boxRef} className='Rahmendetails-main'>\n          {RahmenplaylistEl(playList)}\n        </div>\n\n        {sel_visible ? <Selectedlist\n          node={node}\n          cancel={this.selectedlistHide} /> : null}\n\n        {user_visible ? <Frameuser\n          node={node}\n          cancel={this.frameuserHide} /> : null}\n\n        <Control\n          visible={control_visible}\n          onCancel={this.handleCancel}\n          controlBtn={this.controlBtn}\n          click={telecontrol}\n          node={this.node}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default Rahmendetails;"],"sourceRoot":""}