{"version":3,"sources":["common/Widget/Checkbox.js","common/Widget/DeleteModal.js","components/Rahmen/Uploadcover.js","components/Rahmen/inidex.js"],"names":["Checkbox","withTranslation","props","handleChange","event","setState","value","target","handleOK","val","trim","state","handleconfirm","error","t","inputRef","React","createRef","defaultValue","name","this","current","focus","title","handlecancel","className","onClick","type","ref","maxLength","autoFocus","spellCheck","onChange","Component","DeleteModal","text","custom","Uploadcover","image","myCropper","afterImg","Cropper","viewMode","dragMode","aspectRatio","preview","background","autoCropArea","zoomOnWheel","replace","img","confirm","cancel","src","alt","Rahmen","inject","observer","getWH","rahmen","resize","boxRef","offsetWidth","rahmenList","hide","e","nodeName","menuDisplayId","sorthide","sortDis","more_show","node","stopPropagation","checkAllfn","checkAll","checkAllrahmenList","renamefn","rename","renameNode","ren_defaultValue","ren_handleconfirm","rename_rename","ren_handlecancel","del_handleconfirm","renameDelete","deleteNode","del_visible","del_handlecancel","maskshow","uploading","files","length","file","size","message","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","imageUrl","upFramsid","up_handleCancel","fileRef","up_handleconfirm","cropper","uploadCover","rahmen_init","sortindex","isdes","renameRef","obj","idx","storage","get","order","sortList","set","defaultSort","init","document","window","updata_frames","on","addframes","wsinit","res","removeEventListener","rm","nativeEvent","stopImmediatePropagation","i","rahmen_sort","id","bindtime","is_admin","serial","goUrl","history","push","rahmenEl","OS","login","firstInit","bindframevisibleshow","pitchOn","removerahmenList","invert","map","item","key","style","width","w","height","h","goRahmendetails","visibility","profile","getFile","file_s","backgroundSize","placement","overlayClassName","strRep","display","accept","theme","delete","Nodata","Loading","num","forEach","true","sortEldis","index","changeIndex","observable","descending"],"mappings":"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","file":"static/js/18.76cbf251.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Icon, message } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport './style.scss'\nimport { trim } from '../../util/util';\n\n@withTranslation()\nclass Checkbox extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      value: this.props.defaultValue,\n      name: ''\n    }\n  }\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  handleOK = () => {\n    let val = trim(this.state.value);\n    if (val !== '') {\n      this.props.handleconfirm(val);\n    }else{\n      message.error(this.props.t('enterName'))\n    }\n  }\n\n  render() {\n    const { t, title, handlecancel } = this.props;\n    return (\n      <div className='custom-modal'>\n        <div className='modal-warp'>\n          <div className='modal-warp-header'>\n            <h3>{title}</h3>\n            <span onClick={handlecancel}>\n              <Icon type=\"close\" />\n            </span>\n          </div>\n          <div className='modal-warp-boby'>\n            <div className='modal-warp-input'>\n              <input ref={this.inputRef} maxLength={50} autoFocus spellCheck={false} type=\"text\" value={this.state.value} onChange={this.handleChange} />\n            </div>\n            <div className='modal-warp-handle'>\n              <span className='cancel-btn' onClick={handlecancel}>{t('Cancel')}</span>\n              <span\n                className='confirm-btn'\n                onClick={this.handleOK}>{t('Determine')}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Checkbox;\n","import React, { Component } from 'react';\nimport { Icon } from 'antd';\nimport { withTranslation } from 'react-i18next';\nimport './style.scss'\n\n@withTranslation()\nclass DeleteModal extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n  }\n  render() {\n    const { t, title, text, custom, handlecancel, handleconfirm } = this.props;\n    return (\n      <div className='delete-modal'>\n        <div className='modal-warp'>\n          <div className='modal-warp-header'>\n            <h3>{title}</h3>\n            <span onClick={handlecancel}>\n              <Icon type=\"close\" />\n            </span>\n          </div>\n          <div className='modal-warp-boby'>\n            <div className='modal-warp-text'>\n              <p className='subtitle'>{t('deleteTheSelected')}{text}？</p>\n              <p className='warning'>{t('modalWarning')}{text}{t('CarefulOperation')}</p>\n              <p className='warning'>\n                {custom && custom}\n              </p>\n            </div>\n            <div className='modal-warp-handle'>\n              <span className='cancel-btn' onClick={handlecancel}>{t('Cancel')}</span>\n              <span\n                className='confirm-btn'\n                onClick={handleconfirm}>{t('Determine')}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default DeleteModal;","import React from 'react';\nimport Cropper from 'cropperjs'\nimport { withTranslation } from 'react-i18next';\nimport 'cropperjs/dist/cropper.css'\n\n@withTranslation()\nclass Uploadcover extends React.Component {\n  constructor(props) {\n    super(props);\n    this.image = React.createRef();\n    this.state = {\n      myCropper: null,\n      afterImg: ''\n    }\n  }\n\n  componentDidMount() {\n    let myCropper = new Cropper(this.image.current, {\n      viewMode: 1,\n      dragMode: 'none',\n      aspectRatio: 0.7,\n      preview: '.before',\n      background: false,\n      autoCropArea: 0.6,\n      zoomOnWheel: false,\n    })\n    this.setState({\n      myCropper\n    }, () => {\n      this.state.myCropper.replace(this.props.img)\n    })\n  }\n  render() {\n    const { t, confirm, cancel } = this.props;\n    return (\n      <div className='cover-Mask'>\n        <div className='cover-inner'>\n          <div className='preview_picture'>\n            <div className='preview_left'>\n              <div className=\"show-img\">\n                <img src={this.props.img} ref={this.image} alt=\"\" />\n              </div>\n              <div className='preview_btn'>\n                <span className='confirm' onClick={() => { confirm(this.state.myCropper) }}>{t('Determine')}</span>\n                <span className='cancel' onClick={cancel}>{t('Cancel')}</span>\n              </div>\n            </div>\n            <div className='preview_right'>\n              <p>{t('imagePreview')}</p>\n              <div className=\"before\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Uploadcover;","import React from 'react';\nimport { message, Icon, Tooltip } from 'antd';\n\nimport { inject, observer } from 'mobx-react';\nimport { withTranslation } from 'react-i18next';\nimport { strRep, storage, getFile } from '../../util/util';\nimport './style.scss';\nimport Loading from '../../common/Widget/Loading';\nimport Nodata from '../../common/Widget/Nodata';\nimport { get, observable } from 'mobx';\nimport Checkbox from '../../common/Widget/Checkbox';\nimport DeleteModal from '../../common/Widget/DeleteModal';\nimport Uploadcover from './Uploadcover';\nimport event from '../../util/event';\n\n//ls变量名称\nconst RAHMENSORT = 'RahmenSort';\nconst RAHMENSORT_ISDES = 'RahmenSort_isdes';\n\nfunction getBase64(img, callback) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\n@withTranslation() @inject('rahmen', 'login') @observer\nclass Rahmen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renameRef = React.createRef();\n    this.boxRef = React.createRef();\n    this.fileRef = React.createRef();\n  }\n  @observable sortList = [\n    { id: 1, text: 'bindingSort', descending: true },\n    { id: 2, text: 'nameSort', descending: true }\n  ];\n  @observable defaultSort = {};\n  @observable init = false;\n  @observable sortindex = 0;\n  @observable isdes = false;\n  @observable checkAll = false;\n  @observable deleteNode = null;\n  @observable menuDisplayId = null;\n  @observable rename = false;\n  @observable renameNode = null;\n  @observable ren_defaultValue = \"\";\n  @observable del_visible = false;\n  @observable imageUrl = null;\n  @observable upFramsid = null;\n  @observable sortDis = false;\n\n\n  componentDidMount() {\n    let obj = {};\n    const idx = storage.get(RAHMENSORT);\n    const order = storage.get(RAHMENSORT_ISDES);\n    if (!idx && idx !== 0) {\n      storage.set(RAHMENSORT, 0)\n      obj = this.sortList[0];\n    } else {\n      obj = this.sortList[idx];\n      this.sortindex = idx;\n    }\n    this.defaultSort = obj;\n    this.isdes = order || false;\n    this.props.rahmen.init(true);\n    this.props.rahmen.rahmen_init(null, storage.get(RAHMENSORT), this.isdes, this.boxRef.current.offsetWidth);\n\n    document.addEventListener('click', this.hide);\n    document.addEventListener('click', this.sorthide);\n\n    window.addEventListener('resize', this.getWH);\n\n    this.updata_frames = event.on('updata_frames', () => {\n      this.props.rahmen.rahmen_init(null, storage.get(RAHMENSORT), this.isdes, this.boxRef.current.offsetWidth);\n    })\n\n    this.addframes = event.on('add_frames', () => {\n      this.props.rahmen.rahmen_init(null, storage.get(RAHMENSORT), this.isdes, this.boxRef.current.offsetWidth);\n    })\n\n    this.wsinit = event.on('wsinit', (res) => {\n      if (res === 1) {\n        this.props.rahmen.rahmen_init(null, storage.get(RAHMENSORT), this.isdes, this.boxRef.current.offsetWidth);\n      }\n    })\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.hide);\n    document.removeEventListener('click', this.sorthide);\n    window.removeEventListener('resize', this.getWH)\n    event.rm(this.wsinit);\n    event.rm(this.addframes);\n    event.rm(this.updata_frames);\n    this.props.rahmen.init(false);\n  }\n\n  getWH = () => {\n    this.props.rahmen.resize(this.boxRef.current.offsetWidth, this.props.rahmen.rahmenList)\n  }\n\n  //更多...隐藏\n  hide = e => {\n    if (e.target && e.target.nodeName === 'svg') {\n      return;\n    }\n    this.menuDisplayId = null;\n  }\n  // 排序modal隐藏\n  sorthide = e => {\n    this.sortDis = false;\n  }\n\n  //显示排序\n  sortEldis(e) {\n    e.nativeEvent.stopImmediatePropagation();\n    this.sortDis = !this.sortDis;\n  }\n\n  //更多显示\n  more_show = (e, node) => {\n    e.stopPropagation();\n    if (this.menuDisplayId) {\n      this.menuDisplayId = null;\n    } else {\n      this.menuDisplayId = node;\n    }\n  }\n\n  //全选\n  checkAllfn = () => {\n    this.checkAll = !this.checkAll;\n    this.props.rahmen.checkAllrahmenList(this.checkAll)\n  }\n\n  //选择排序\n  changeIndex(i) {\n    storage.set(RAHMENSORT, i)\n    if (this.sortindex === i) {\n      this.isdes = !this.isdes;\n      storage.set(RAHMENSORT_ISDES, this.isdes);\n    } else {\n      this.sortindex = i;\n      storage.set(RAHMENSORT_ISDES, this.isdes);\n    }\n    this.defaultSort = this.sortList[i];\n    this.props.rahmen.rahmen_sort(i, this.isdes);\n  }\n\n  //重命名显示\n  renamefn = (e, node, name) => {\n    e.stopPropagation();\n    this.rename = true;\n    this.renameNode = node;\n    this.ren_defaultValue = name;\n  }\n  //重命名确定\n  ren_handleconfirm = (name) => {\n    this.props.rahmen.rename_rename(this.renameNode, name);\n    this.rename = false;\n    this.renameNode = null;\n  }\n  //重命名取消\n  ren_handlecancel = () => {\n    this.rename = false\n    this.renameNode = null;\n  }\n\n  //删除相框显示\n  delete(e, id) {\n    e.stopPropagation();\n    this.del_visible = true;\n    this.deleteNode = [id];\n  }\n  //删除相框确定\n  del_handleconfirm = () => {\n    this.props.rahmen.renameDelete(this.deleteNode);\n    this.del_visible = false;\n    this.checkAll = false;\n    this.deleteNode = null;\n  }\n  //删除取消\n  del_handlecancel = () => {\n    this.del_visible = false;\n    this.deleteNode = null;\n  }\n\n  //照片封面上传\n  maskshow = (e) => {\n    e.stopPropagation();\n  }\n\n  //上传\n  uploading = (e, node) => {\n    if (e.target.files.length > 0) {\n      let file = e.target.files[0];\n      if (file.size / 1024 / 1024 > 10) {\n        message.error(this.props.t('picturemaximum'));\n        return;\n      }\n      getBase64(file, (imageUrl) => {\n        this.imageUrl = imageUrl;\n        this.file = file;\n        this.upFramsid = node;\n      })\n    }\n  }\n\n  up_handleCancel = () => {\n    this.imageUrl = null;\n    this.upFramsid = null;\n    this.fileRef.current.value = null;\n  }\n\n  up_handleconfirm = (cropper) => {\n    this.props.rahmen.uploadCover(cropper, this.file, this.upFramsid, () => {\n      this.props.rahmen.rahmen_init(null, this.sortindex, this.isdes, this.boxRef.current.offsetWidth);\n    }, () => {\n      this.fileRef.current.value = null;\n    });\n    this.imageUrl = null;\n  }\n\n  //跳转详情页\n  goRahmendetails(node, name, bindtime, is_admin, serial) {\n    this.props.rahmen.goUrl({\n      name, bindtime, is_admin, serial\n    })\n    this.props.history.push(`/rahmen/rahmendetails/${node}`);\n  }\n\n  render() {\n    const { t } = this.props;\n    const { OS } = this.props.login;\n    const {\n      sortList,\n      defaultSort,\n      isdes,\n      menuDisplayId,\n      rename,\n      ren_defaultValue,\n      del_visible,\n      imageUrl,\n      sortDis } = this;\n    const { firstInit, rahmenList, bindframevisibleshow, pitchOn, removerahmenList, invert } = this.props.rahmen;\n    let rahmenEl;\n    if (firstInit) {\n      if (rahmenList.length > 0) {\n        rahmenEl = rahmenList.map((item) => {\n          return (\n            <div className='list' key={item.node} style={{ width: item.w, height: item.h }}>\n              <div\n                className={`rahmen-list ${get(item, 'check') ? 'rahmen-list-check' : null}`}\n                onClick={(e) => { this.goRahmendetails(item.node, item.name, item.bindtime, item.is_admin, item.serial) }}>\n                <span\n                  style={OS === 'tab' ? { visibility: 'inherit' } : {}}\n                  className='icon-check-s treeNodeUnselectable'\n                  onClick={(e) => { pitchOn(e, item.node, () => { this.checkAll = true; }, () => { this.checkAll = false; }) }}>\n                  <i className='iconfont' style={get(item, 'check') ? {} : { visibility: \"hidden\" }}>&#xe62d;</i>\n                </span>\n                <div className='rahmen-cover'>\n                  <div className='cover-img'>\n                    <span\n                      className='back-img'\n                      style={item.profile ? { background: `url(\"${getFile.file_s(item.profile.id)}\") no-repeat`, backgroundSize: '100% 100%' } : {}}></span>\n                  </div>\n                </div>\n                <div className='rahmen-name-series'>\n                  <p className='name_info ellipsis'>\n                    <Tooltip placement=\"bottom\" overlayClassName='tooltip' title={get(item, 'name')}>\n                      <span className='name ellipsis'>{item.name}</span>\n                    </Tooltip>\n                    <span className='admin' style={item.is_admin ? { visibility: 'initial' } : { visibility: 'hidden' }}>{t('Admin')}</span>\n                  </p>\n                  <p className='series'>SN : {strRep(item.serial)} </p>\n                </div>\n                <div className='rahmen-list-more treeNodeUnselectable' onClick={(e) => { this.more_show(e, item.node) }}>\n                  <div className='more-box'>\n                    <span><Icon type=\"ellipsis\" /></span>\n                    <div className='more-menu' style={menuDisplayId === item.node ? {} : { display: 'none' }}>\n                      <ul>\n                        <li className='upfile' onClick={this.maskshow}>\n                          <span><Icon type=\"picture\" />{t('Replacecover')}</span>\n                          <input type=\"file\"\n                            ref={this.fileRef}\n                            title=\"\"\n                            accept=\"image/jpg,image/bmp,image/jpeg,image/png\"\n                            onChange={(e) => { this.uploading(e, item.node) }} />\n                        </li>\n                        <li onClick={(e) => { this.renamefn(e, item.node, item.name) }}>\n                          <span><Icon type=\"edit\" theme=\"filled\" />{t('rename')}</span>\n                        </li>\n                        <li onClick={(e) => { this.delete(e, item.node) }}>\n                          <span><Icon type=\"delete\" theme=\"filled\" />{t('delete')}</span>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        })\n      } else {\n        rahmenEl = <Nodata />\n      }\n    } else {\n      rahmenEl = <Loading />\n    }\n    let num = 0;\n    removerahmenList.forEach(item => {\n      if (!item.true) {\n        num += 1;\n      }\n    });\n\n    return (\n      <div className='rahmen-content'>\n        <div className='new-rahmen'>\n          <div className='new-rahmen-btn'>\n            <button onClick={bindframevisibleshow}>{t('BindingFrame')}</button>\n          </div>\n          <div className='rahmen-num'>\n            <div className='rahmen-num-icon'><i className='iconfont'>&#xe784;</i></div>\n            <div className='num-text'>\n              <p className='text'>{t('photoframe')}</p>\n              <p className='num'>{rahmenList.length}</p>\n            </div>\n          </div>\n        </div>\n        <div className='rahmen-operation'>\n          <div className='checkAll'>\n            <i\n              className={`iconfont check-rahmen treeNodeUnselectable ${rahmenList.length === removerahmenList.length && rahmenList.length > 0 ? 'icon-xuanzhong1' : 'icon-weixuanzhong'}`}\n              onClick={this.checkAllfn}></i>\n            <span className='checkAll-text'>{num > 0 ? `${t('Selected')} ${num} ${t('frame')}` : t('Allelection')}</span>\n            {removerahmenList.length > 0 && <span onClick={invert} className='invert-Selection'>{t('Reverseselection')}</span>}\n          </div>\n          <div className='rahmen-sort treeNodeUnselectable'>\n            <span className='sort' onClick={(e) => { this.sortEldis(e) }}>{t(defaultSort.text)}{isdes ? <Icon type=\"arrow-up\" /> : <Icon type=\"arrow-down\" />}</span>\n            <div className='sort-list' style={sortDis ? { display: 'block' } : { display: 'none' }}>\n              <ul>\n                {\n                  sortList.map((item, index) => {\n                    return (\n                      <li key={item.id} onClick={() => { this.changeIndex(index) }}>\n                        <span>\n                          <Icon type=\"check\" className={item.id === defaultSort.id ? 'check-icon' : null} />\n                          {t(item.text)}</span>\n                      </li>\n                    )\n                  })\n                }\n              </ul>\n            </div>\n          </div>\n          <div className='rahmen-delete' style={removerahmenList.length > 0 ? null : { visibility: 'hidden' }}>\n            <span onClick={this.del_handleconfirm}><Icon type=\"delete\" />{t('delete')}</span>\n          </div>\n        </div>\n        <div ref={this.boxRef} className='rahmen-main'>\n          {rahmenEl}\n        </div>\n\n        {rename ? <Checkbox\n          title={t('rename')}\n          defaultValue={ren_defaultValue}\n          handlecancel={this.ren_handlecancel}\n          handleconfirm={this.ren_handleconfirm} /> : null}\n\n        {del_visible ? <DeleteModal\n          title='确认删除相框'\n          text='相框'\n          handlecancel={this.del_handlecancel}\n          handleconfirm={this.del_handleconfirm} /> : null}\n\n        {imageUrl && <Uploadcover\n          img={this.imageUrl}\n          confirm={this.up_handleconfirm}\n          cancel={this.up_handleCancel} />}\n      </div>\n    );\n  }\n};\n\nexport default Rahmen;\n"],"sourceRoot":""}